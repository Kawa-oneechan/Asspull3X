#include "asspull.h"
#include "ini.h"

#define LETITSNOW
#define PROPER_ARROW
//#define NESTICLE_BLUE

#include "nokia.c"

char uiStatus[512] = { 0 };
char uiFPS[32] = { 0 };
int statusTimer = 0;

#define FAIZ(r, g, b) (((b) >> 3) << 10) | (((g) >> 3) << 5) | ((r) >> 3)
#define WITH_SHADOW | 0x8000

//TODO: inactive window border/caption

#define STATUS_TEXT			FAIZ(255, 255, 255) WITH_SHADOW
#define WINDOW_BORDER_L		FAIZ(0, 0, 0)
#define WINDOW_BORDER_T		WINDOW_BORDER_L
#define WINDOW_BORDER_R		WINDOW_BORDER_L
#define WINDOW_BORDER_B		WINDOW_BORDER_L
#ifndef NESTICLE_BLUE
#define WINDOW_FILL			FAIZ(170, 0, 0)
#else
#define WINDOW_FILL			FAIZ(0, 0, 170)
#endif
#define WINDOW_TEXT			FAIZ(255, 255, 255)
#ifndef NESTICLE_BLUE
#define WINDOW_CAPTION		FAIZ(255, 0, 4 )
#else
#define WINDOW_CAPTION		FAIZ(0, 4, 255)
#endif
#define WINDOW_CAPTEXT		FAIZ(255, 255, 255) WITH_SHADOW
#define WINDOW_CAPLINE		WINDOW_CAPTION
#define BUTTON_BORDER_L		FAIZ(142, 142, 142)
#define BUTTON_BORDER_T		BUTTON_BORDER_L
#define BUTTON_BORDER_R		FAIZ(85, 85, 85)
#define BUTTON_BORDER_B		BUTTON_BORDER_R
#define BUTTON_FILL			FAIZ(113, 113, 113)
#define BUTTON_TEXT			WINDOW_TEXT
#define BUTTON_HIGHLIGHT	FAIZ(133, 133, 133)
#define BUTTON_HIGHTEXT		BUTTON_TEXT
#ifndef NESTICLE_BLUE
#define MENUBAR_FILL		FAIZ(125, 0, 0)
#else
#define MENUBAR_FILL		FAIZ(0, 0, 125)
#endif
#define MENUBAR_TEXT		WINDOW_CAPTEXT
#define MENUBAR_HIGHLIGHT	FAIZ(0, 170, 0)
#define MENUBAR_HIGHTEXT	FAIZ(85, 255, 85) WITH_SHADOW
#define PULLDOWN_BORDER_L	WINDOW_BORDER_L
#define PULLDOWN_BORDER_T	WINDOW_BORDER_T
#define PULLDOWN_BORDER_R	WINDOW_BORDER_R
#define PULLDOWN_BORDER_B	WINDOW_BORDER_B
#define PULLDOWN_FILL		MENUBAR_FILL
#define PULLDOWN_TEXT		MENUBAR_TEXT
#define PULLDOWN_HIGHLIGHT	MENUBAR_HIGHLIGHT
#define PULLDOWN_HIGHTEXT	MENUBAR_HIGHTEXT

typedef struct uiMenuItem
{
	char caption[256];
	int(*onSelect)(int, int, int);
} uiMenuItem;

typedef struct uiMenu
{
	int numItems;
	uiMenuItem items[16];
} uiMenu;

int _uiMainMenu(int, int, int);
int _uiLoadROM(int, int, int);
int _uiUnloadROM(int, int, int);
int _uiReset(int, int, int);
int _uiQuit(int, int, int);

const uiMenu mainMenu =
{
	2, { { "File", _uiMainMenu }, { "Device", _uiMainMenu } }
};

const uiMenu fileMenu =
{
	4,
	{
		{ "Load ROM\t^L", _uiLoadROM },
		{ "Unload ROM\t^U", _uiUnloadROM },
		{ "Reset\t\t^R", _uiReset },
		{ "Quit", _uiQuit }
	}
};

#define MAXWINDOWS 16

typedef struct uiWindow
{
	int token;
	int left, top;
	int width, height;
	char caption[256];
	int(*handler)(int);
} uiWindow;

uiWindow windows[MAXWINDOWS] = { 0 };
//{ { 0x707, 32, 32, 227, 78, "E Clunibus Tractum", _uiAboutWin } };
int uiOpenWindows = 0;

int pullDownLevel = 0;
uiMenu* pullDowns[4] = { 0 };
int pullDownLefts[4] = { 0 };
int pullDownTops[4] = { 0 };
int currentTopMenu = -1;

extern unsigned char* pixels;
inline void RenderPixel(int row, int column, int color)
{
	if (row < 0 || row >= 480 || column < 0 || column >= 640) return;
	auto target = (((row) * 640) + (column)) * 4;
	auto r = (color >> 0) & 0x1F;
	auto g = (color >> 5) & 0x1F;
	auto b = (color >> 10) & 0x1F;
	pixels[target + 0] = (b << 3) + (b >> 2);
	pixels[target + 1] = (g << 3) + (g >> 2);
	pixels[target + 2] = (r << 3) + (r >> 2);
}
inline void DarkenPixel(int row, int column)
{
	if (row < 0 || row >= 480 || column < 0 || column >= 640) return;
	auto target = (((row) * 640) + (column)) * 4;
	pixels[target + 0] = pixels[target + 0] / 2;
	pixels[target + 1] = pixels[target + 1] / 2;
	pixels[target + 2] = pixels[target + 2] / 2;
}

int justClicked = 0;
int mouseTimer = 0, lastMouseTimer = 0;
#ifdef WITH_OPENGL
int GetMouseState(int *x, int *y)
{
	int buttons = SDL_GetMouseState(x, y);
	if (mouseTimer == lastMouseTimer)
		return (justClicked == 2) ? 1 : 0;
	lastMouseTimer = mouseTimer;
	if (justClicked == 0 && buttons == 1)
		justClicked = 1;
	else if (justClicked == 1 && buttons == 0)
		justClicked = 2;
	else if (justClicked == 2)
		justClicked = 0;

	int winWidth, winHeight;
	SDL_GetWindowSize(sdlWindow, &winWidth, &winHeight);
	int scrWidth = (winWidth / 640) * 640;
	int scrHeight = (winHeight / 480) * 480;
	scrWidth = (int)(scrHeight * 1.33334f);
	int minx = (winWidth - scrWidth) / 2;
	int miny = (winHeight - scrHeight) / 2;
	float scaleX = 640.0f / winWidth;
	float scaleY = 480.0f / winHeight;
	*x = (int)(*x * scaleX);
	*y = (int)(*y * scaleY);
	*x -= minx;
	*y -= miny;
	return (justClicked == 2) ? 1 : 0;
}
#else
int GetMouseState(int *x, int *y)
{
	int buttons = SDL_GetMouseState(x, y);
	if (justClicked == 0 && buttons == 1)
		justClicked = 1;
	else if (justClicked == 1 && buttons == 0)
		justClicked = 2;
	else if (justClicked == 2)
		justClicked = 0;
	return justClicked == 1;
}
#endif

static unsigned short cursor[] =
{
#ifdef PROPER_ARROW
	0x0001,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0001,0x0001,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0001,0x7FFF,0x0001,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0001,0x7FFF,0x7FFF,0x0001,0x0000,0x0000,0x0000,0x0000,
	0x0001,0x7FFF,0x7FFF,0x7FFF,0x0001,0x0000,0x0000,0x0000,
	0x0001,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x0001,0x0000,0x0000,
	0x0001,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x0001,0x0000,
	0x0001,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x0001,0x8000,0x8000,
	0x0001,0x7FFF,0x0001,0x7FFF,0x7FFF,0x7FFF,0x0001,0x0000,
	0x0001,0x0001,0x8000,0x0001,0x7FFF,0x7FFF,0x0001,0x8000,
	0x0000,0x8000,0x8000,0x8000,0x0001,0x0001,0x8000,0x8000,
	0x0000,0x0000,0x0000,0x0000,0x8000,0x8000,0x8000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
#else
	0x739C,0x77BD,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x2108,0x8000,
	0x6F7B,0x739C,0x77BD,0x77BD,0x7FFF,0x2108,0x2108,0x8000,
	0x6739,0x6F7B,0x739C,0x77BD,0x2108,0x2108,0x8000,0x8000,
	0x6739,0x6F7B,0x6F7B,0x739C,0x77BD,0x8000,0x8000,0x0000,
	0x6739,0x6739,0x2108,0x6F7B,0x739C,0x77BD,0x8000,0x0000,
	0x6739,0x2108,0x2108,0x8000,0x6F7B,0x739C,0x2108,0x8000,
	0x2108,0x2108,0x8000,0x8000,0x8000,0x2108,0x2108,0x8000,
	0x8000,0x8000,0x8000,0x0000,0x0000,0x8000,0x8000,0x8000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
#endif
};

int oldX, oldY, cursorTimer = 1000;
void DrawCursor()
{
	int x, y;
	GetMouseState(&x, &y);
	if (oldX != x || oldY != y)
		cursorTimer = 100;
	oldX = x;
	oldY = y;

	if (cursorTimer == 0)
		return;

	cursorTimer--;

	unsigned short pix = 0;
	for (int row = 0; row < 16; row++)
	{
		if (y + row >= 480)
			break;
		for (int col = 0; col < 8; col++)
		{
			pix = cursor[(row * 8) + col];
			if (x + col >= 640)
				break;
			if (pix == 0x0000)
				continue;
			if (pix == 0x8000)
			{
				DarkenPixel(y + row, x + col);
				continue;
			}
			RenderPixel(y + row, x + col, pix);
		}
	}
}

void DrawCharacter(int x, int y, int color, char ch)
{
	auto glyph = &nokiaFont[(ch - ' ') * 8];
	for (int line = 0; line < 8; line++)
	{
		auto num = glyph[line];
		for (int bit = 0; bit < 8; bit++)
		{
			if (num & 1)
			{
				RenderPixel(y + line, x + bit, color & 0x7FFF);
				if (color & 0x8000) DarkenPixel(y + line + 1, x + bit + 1);
			}
			num >>= 1;
		}
	}
}

void DrawImage(int x, int y, unsigned short* pixmap, int width, int height)
{
	for (int row = 0; row < height; row++)
		for (int col = 0; col < width; col++)
			RenderPixel(y + row, x + col, pixmap[(row * width) + col]);
}

#define TABWIDTH 48

void DrawString(int x, int y, int color, char* str)
{
	int sx = x;
	while(*str)
	{
		if (*str == '\t')
			x = ((x / TABWIDTH) * TABWIDTH) + TABWIDTH;
		else if (*str == '\n')
		{
			x = sx;
			y += 10;
		}
		else
		{
			DrawCharacter(x, y, color, *str);
			x += nokiaFontWidth[(*str - ' ')];
		}
		str++;
	}
}

int MeasureString(char* str)
{
	int width = 0;
	while(*str)
	{
		if (*str == '\t')
			width = ((width / TABWIDTH) * TABWIDTH) + TABWIDTH;
		else
			width += nokiaFontWidth[(*str - ' ')];
		str++;
	}
	return width;
}

#ifdef LETITSNOW
#define MAXSNOW 256
int snowData[MAXSNOW * 2];
int snowTimer = -1;
void LetItSnow()
{
	if (snowTimer == -1)
	{
		//Prepare
		srand(0xC001FACE);
		for (int i = 0; i < MAXSNOW; i++)
		{
			snowData[(i * 2) + 0] = rand() % 640;
			snowData[(i * 2) + 1] = rand() % 480;
		}
		snowTimer = 1;
	}

	snowTimer--;
	if (snowTimer == 0)
	{
		snowTimer = 4;
		for (int i = 0; i < MAXSNOW; i++)
		{
			snowData[(i * 2) + 0] += -1 + (rand() % 3);
			snowData[(i * 2) + 1] += rand() % 2;
			if (snowData[(i * 2) + 1] >= 480)
			{
				snowData[(i * 2) + 0] = rand() % 640;
				snowData[(i * 2) + 1] = -10;
			}
		}
	}

	for (int i = 0; i < MAXSNOW; i++)
	{
		int x = snowData[(i * 2) + 0];
		int y = snowData[(i * 2) + 1];
		if (x < 0 || y < 0 || x >= 640 || y >= 480)
			continue;
		RenderPixel(y, x, 0x7FFF);
	}
}
#else
#define LetItSnow()
#endif

int draggingWindowID = -1;
int dragStartX, dragStartY;

void BringWindowToFront(int token)
{
	if (uiOpenWindows < 2)
		return;
	if (windows[uiOpenWindows - 1].token == token)
		return;
	for (int i = 0; i < uiOpenWindows - 1; i++)
	{
		if (windows[i].token == token && i < uiOpenWindows)
		{
			uiWindow swapWin;
			memcpy(&swapWin, &windows[i], sizeof(uiWindow));
			for (int j = i + 1; j < MAXWINDOWS; j++)
				memcpy(&windows[j - 1], &windows[j], sizeof(uiWindow));
			memcpy(&windows[uiOpenWindows - 1], &swapWin, sizeof(uiWindow));
		}
	}
}

void CloseWindow(int token)
{
	for (int i = 0; i < uiOpenWindows; i++)
	{
		if (windows[i].token == token)
		{
			for (int j = i + 1; j < MAXWINDOWS; j++)
				memcpy(&windows[j - 1], &windows[j], sizeof(uiWindow));
			uiOpenWindows--;
			return;
		}
    }
}

void OpenWindow(int token, int left, int top, int width, int height, char* caption, int(*handler)(int))
{
	for (int i = 0; i < uiOpenWindows; i++)
	{
		if (windows[i].token == token)
		{
			SDL_Log("Already have a window with token $%X", token);
			BringWindowToFront(token);
			return;
		}
    }
	auto newWin = &windows[uiOpenWindows++];
	newWin->token = token;
	newWin->left = left;
	newWin->top = top;
	newWin->width = width;
	newWin->height = height;
	strcpy_s(newWin->caption, 256, caption);
	newWin->handler = handler;
}

void OpenWindow(uiWindow* window)
{
	for (int i = 0; i < uiOpenWindows; i++)
	{
		if (windows[i].token == window->token)
		{
			SDL_Log("Already have a window with token $%X", window->token);
			BringWindowToFront(window->token);
			return;
		}
    }
	auto newWin = &windows[uiOpenWindows++];
	newWin->token = window->token;
	newWin->left = window->left;
	newWin->top = window->top;
	newWin->width = window->width;
	newWin->height = window->height;
	strcpy_s(newWin->caption, 256, window->caption);
	newWin->handler = window->handler;
}

int CheckForWindowPops()
{
	if (uiOpenWindows < 2 || draggingWindowID != -1)
		return 0;
	int x = 0, y = 0;
	GetMouseState(&x, &y);
	int buttons = SDL_GetMouseState(0, 0);
	if (buttons == 0)
		return 0;
	for (int i = uiOpenWindows; i >= 0; --i)
	{
		auto win = &windows[i];
		if (x > win->left && y > win->top && x < win->left + win->width && y < win->top + win->height)
		{
			BringWindowToFront(win->token);
			return 1;
		}
	}
	return 0;
}

void SetStatus(char* text)
{
	strcpy_s(uiStatus, 512, text);
	statusTimer = 100;
}

void uiHandleStatusLine(int left)
{
	if (statusTimer)
	{
		DrawString(left, 2, STATUS_TEXT, uiStatus);
		statusTimer--;
	}
	DrawString(640 - 8 - (strlen(uiFPS) * 5), 2, STATUS_TEXT, uiFPS);
}

int uiHandleMenuDrop(uiMenu* menu, int left, int top, int *openedTop)
{
	int width = 0;

	for (int i = 0; i < menu->numItems; i++)
	{
		int thisWidth = MeasureString(menu->items[i].caption) + 8; //(strlen(menu->items[i].caption) * 6) + 8;
		if (thisWidth > width)
			width = thisWidth;
	}

	int focused = -1;
	int x = 0, y = 0;
	int buttons = GetMouseState(&x, &y);
	for (int i = 0; i < menu->numItems; i++)
	{
		if (x >= left && x < left + width && y >= top + (i * 10) && y < top + (i * 10) + 10)
		{
			focused = i;
			break;
		}
	}

	for (int col = 0; col < width + 2; col++)
	{
		RenderPixel(top - 1, left + col, PULLDOWN_BORDER_T);
		RenderPixel(top + (menu->numItems * 10), left + col, PULLDOWN_BORDER_B);
	}
	for (int i = 0, y = top; i < menu->numItems; i++, y += 10)
	{
		for (int line = 0; line < 10; line++)
		{
			RenderPixel(y + line, left, PULLDOWN_BORDER_L);
			int color = PULLDOWN_FILL;
			if (i == focused)
				color = PULLDOWN_HIGHLIGHT;
			for (int col = 0; col < width; col++)
			{
				RenderPixel(y + line, left + 1 + col, color);
			}
			RenderPixel(y + line, left + 1 + width, PULLDOWN_BORDER_R);
		}
		DrawString(left + 2, y + 1, (i == focused) ? PULLDOWN_HIGHTEXT : PULLDOWN_TEXT, menu->items[i].caption);
	}
	for (int y = top; y <= top + (menu->numItems * 10); y++)
	{
		DarkenPixel(y + 2, left + 2 + width);
		DarkenPixel(y + 2, left + 3 + width);
	}
	for (int col = 0; col < width; col++)
	{
		DarkenPixel(top + (menu->numItems * 10) + 1, col + 4);
		DarkenPixel(top + (menu->numItems * 10) + 2, col + 4);
	}

	if (buttons == 1 && focused != -1)
	{
		currentTopMenu = -1;
		if (menu->items[focused].onSelect)
			return menu->items[focused].onSelect(focused, left + width, top + (focused * 10));
		return focused;
	}
	if (buttons == 1 && focused == -1 && y > 10)
		pullDownLevel = 0;

	return 0;
}

int uiHandleMenuBar(uiMenu* menu, int *openedLeft)
{
	int extents[16];
	for (int i = 0; i < menu->numItems; i++)
		extents[i] = MeasureString(menu->items[i].caption) + 10; //(strlen(menu->items[i].caption) * 6) + 10;
	for (int i = 1; i < menu->numItems; i++)
		extents[i] += extents[i - 1];
	int width = extents[menu->numItems - 1] + 8;
	int x = 0, y = 0;
	int buttons = GetMouseState(&x, &y);

	uiHandleStatusLine(width + 8);

	int focused = -1;
	int focusL = -32, focusR = -32;
	int otherFocusL = -32, otherFocusR = -32;
	if (x < extents[0])
	{
		focused = 0;
		focusL = 0;
		focusR = extents[0];
	}
	else if (y < 10)
	{
		for (int i = 1; i < menu->numItems; i++)
		{
			if (x >= extents[i - 1] && x < extents[i])
			{
				focused = i;
				focusL = extents[i - 1];
				focusR = extents[i];
				break;
			}
		}
	}
	if (currentTopMenu != -1)
	{
		if (currentTopMenu == 0)
			otherFocusL = 0;
		else
			otherFocusL = extents[currentTopMenu - 1];
		otherFocusR = extents[currentTopMenu];
	}

	for (int i = 0; i < width; i++)
	{
		int color = MENUBAR_FILL;
		if ((i >= focusL && i < focusR) || (i >= otherFocusL && i < otherFocusR))
			color = MENUBAR_HIGHLIGHT;
		for (int j = 0; j < 12; j++)
		{
			RenderPixel(j, i, color);
		}
		DarkenPixel(12, i);
		DarkenPixel(13, i);
	}
	for (int j = 0; j < 14; j++)
	{
		DarkenPixel(j, width + 0);
		DarkenPixel(j, width + 1);
	}

	for (int i = 0, x = 4; i < menu->numItems; i++, x = extents[i - 1] + 4)
	{
		DrawString(x, 2, (i == focused || i == currentTopMenu) ? MENUBAR_HIGHTEXT : MENUBAR_TEXT, menu->items[i].caption);
	}

	if (buttons == 1 && focused != -1)
	{
		currentTopMenu = focused;
		*openedLeft = focusL;
		if (menu->items[focused].onSelect)
			return menu->items[focused].onSelect(focused, focusL, 0);
		return focused;
	}

	return -2;
}

int uiHandleWindow(uiWindow* win)
{
	for (auto col = win->left; col < win->left + win->width; col++)
	{
		RenderPixel(win->top, col, WINDOW_BORDER_T);
		RenderPixel(win->top + win->height - 1, col, WINDOW_BORDER_B);
		DarkenPixel(win->top + win->height + 0, col + 2);
		DarkenPixel(win->top + win->height + 1, col + 2);
	}
	auto color = WINDOW_CAPTION;
	for (auto row = win->top + 1; row < win->top + win->height - 1; row++)
	{
		RenderPixel(row, win->left, WINDOW_BORDER_L);
		if (row == win->top + 12) color = WINDOW_CAPLINE;
		if (row == win->top + 13) color = WINDOW_FILL;
		for (auto col = win->left + 1; col < win->left + win->width - 1; col++)
			RenderPixel(row, col, color);
		RenderPixel(row, win->left + win->width - 1, WINDOW_BORDER_R);
		DarkenPixel(row + 1, win->left + win->width + 0);
		DarkenPixel(row + 1, win->left + win->width + 1);
	}
	DrawString(win->left + 3, win->top + 3, WINDOW_CAPTEXT, win->caption);
	int x = 0, y = 0;
	GetMouseState(&x, &y);
	int buttons = SDL_GetMouseState(0, 0); //need actual button state to drag!
	if (buttons == 1 && x > win->left && y > win->top && x < win->left + win->width && y < win->top + 12)
	{
		if (draggingWindowID == -1)
		{
			draggingWindowID = win->token;
			dragStartX = x - win->left;
			dragStartY = y - win->top;
		}
	}
	else if (buttons == 1 && draggingWindowID == win->token)
	{
		win->left = x - dragStartX;
		win->top = y - dragStartY;
	}
	else if (buttons == 0 && draggingWindowID == win->token)
	{
		draggingWindowID = -1;
	}
	return 0;
}

int uiHandleButton(int left, int top, int width, char* caption)
{
	int x = 0, y = 0;
	int buttons = GetMouseState(&x, &y);
	auto fill = BUTTON_FILL;
	auto text = BUTTON_TEXT;
	if (x > left && y > top && x < left + width && y < top + 13)
	{
		fill = BUTTON_HIGHLIGHT;
		text = BUTTON_HIGHTEXT;
	}
	else
		buttons = 0;
	for (auto col = left; col < left + width; col++)
	{
		RenderPixel(top, col, BUTTON_BORDER_T);
		RenderPixel(top + 13, col, BUTTON_BORDER_B);
	}
	for (auto row = top + 1; row < top + 13; row++)
	{
		RenderPixel(row, left, BUTTON_BORDER_L);
		for (auto col = left + 1; col < left + width - 1; col++)
			RenderPixel(row, col, fill);
		RenderPixel(row, left + width - 1, BUTTON_BORDER_R);
	}
	auto capLeft = left + (width / 2) - (MeasureString(caption) / 2);
	DrawString(capLeft, top + 3, text, caption);
	return buttons;
}

extern int pauseState;
void HandleUI()
{
	int x = 0, y = 0;
	mouseTimer++;
	int buttons = GetMouseState(&x, &y);
	if (pauseState == 2)
		LetItSnow();

	if (uiOpenWindows)
	{
		CheckForWindowPops();
		for (int i = 0; i < uiOpenWindows; i++)
		{
			uiHandleWindow(&windows[i]);
			if (windows[i].handler == 0)
				continue;
			auto response = windows[i].handler(i);
			if (response == -1)
				break;
		}
		cursorTimer = 100;
	}

	if (pullDownLevel > 0)
	{
		auto response = uiHandleMenuBar(&(uiMenu)mainMenu, &x);
		response = uiHandleMenuDrop(pullDowns[0], pullDownLefts[0], pullDownTops[0], &y);
		cursorTimer = 100;
	}
	else if (y < 10 || pauseState == 2)
	{
		auto response = uiHandleMenuBar(&(uiMenu)mainMenu, &x);
		cursorTimer = 100;
	}
	else
	{
		uiHandleStatusLine(4);
	}
	DrawCursor();
}

extern uiWindow aboutWindow;
extern uiWindow memoryViewerWindow;

int _uiMainMenu(int item, int itemLeft, int itemTop)
{
	switch (item)
	{
	case 0: //File
		pullDownLevel = 1;
		pullDowns[0] = (uiMenu*)&fileMenu;
		pullDownLefts[0] = itemLeft + 2;
		pullDownTops[0] = 12;
		break;
	case 1: //Devices
		pullDownLevel = 0;
		//OpenWindow((uiWindow*)&aboutWindow);
		OpenWindow((uiWindow*)&memoryViewerWindow);
		//OpenWindow(0xDEAD, 80, 200, 128, 128, "test", 0);
		break;
	}
	return 0;
}

int uiCommand, uiData;

int _uiLoadROM(int, int, int)
{
	pullDownLevel = 0;
	uiCommand = cmdLoadRom;
	return 0;
}
int _uiUnloadROM(int, int, int)
{
	pullDownLevel = 0;
	uiCommand = cmdUnloadRom;
	return 0;
}
int _uiReset(int, int, int)
{
	pullDownLevel = 0;
	uiCommand = cmdReset;
	uiData = (SDL_GetModState() & KMOD_CTRL);
	return 0;
}
int _uiQuit(int, int, int)
{
	pullDownLevel = 0;
	uiCommand = cmdQuit;
	return 0;
}

const unsigned short aboutPic[144 * 64] =
{
	0x2D6B,0x254B,0x294A,0x294A,0x294A,0x294A,0x2529,0x2529,
	0x2529,0x2129,0x2108,0x2108,0x1CE7,0x1CE7,0x18E7,0x18C6,
	0x18C6,0x14A5,0x14A5,0x1084,0x1084,0x0864,0x0C63,0x0C63,
	0x0863,0x0842,0x0842,0x0842,0x0421,0x0421,0x0421,0x0421,
	0x0421,0x0421,0x0421,0x0443,0x0443,0x0444,0x0865,0x0886,
	0x10A6,0x0CA8,0x14EA,0x192C,0x1D4E,0x298F,0x298F,0x31D2,
	0x3A12,0x3A35,0x4276,0x46B7,0x46D9,0x4AFA,0x4F3C,0x4F3C,
	0x3B1D,0x4211,0x4210,0x4210,0x4210,0x4210,0x4210,0x39CE,

	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0421,0x0443,0x0444,0x0444,0x0865,0x0865,0x0865,0x0865,
	0x0865,0x0865,0x0864,0x0864,0x0864,0x0864,0x0865,0x0865,
	0x0865,0x0865,0x0865,0x0864,0x0864,0x0864,0x0864,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0864,0x0865,

	0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,
	0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,
	0x294A,0x294A,0x294A,0x294A,0x294A,0x2529,0x2529,0x2529,
	0x2529,0x2108,0x2108,0x1D08,0x1CE7,0x1CE7,0x18E7,0x18E7,
	0x18E7,0x18E7,0x18E7,0x2109,0x190B,0x192C,0x254B,0x216F,
	0x298F,0x298F,0x31D2,0x3A12,0x3A35,0x4276,0x46B7,0x46B7,
	0x4AFA,0x4F3C,0x4F3C,0x4F3C,0x4F3C,0x4F7E,0x4F7E,0x4F7E,
	0x4F7E,0x475E,0x475E,0x3B1D,0x3B1D,0x3B1D,0x36BB,0x36BB,

	0x36BB,0x2E78,0x2E78,0x2E78,0x2E35,0x2E35,0x2E35,0x2E35,
	0x3A12,0x4210,0x4210,0x4210,0x4210,0x4210,0x3DEF,0x39CE,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0421,0x0443,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0864,0x0864,0x0864,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,

	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0865,0x0865,0x0865,0x0865,
	0x31AF,0x31AF,0x35D1,0x3E10,0x3A12,0x3E53,0x4276,0x4276,
	0x46B7,0x46B7,0x4AFA,0x4AFA,0x4AFA,0x4F3C,0x4F3C,0x4F7E,
	0x4F7E,0x4F7E,0x4F7E,0x4F7E,0x4F7E,0x4F7E,0x475E,0x475E,
	0x3B1D,0x3B1D,0x3B1D,0x36BB,0x36BB,0x36BB,0x36BB,0x2E78,

	0x2E78,0x2E78,0x2E78,0x3698,0x3698,0x3A35,0x3A35,0x3A35,
	0x4654,0x4654,0x4A53,0x4A53,0x4A53,0x4A53,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4631,0x4631,0x4631,0x4631,
	0x4631,0x4210,0x4210,0x4210,0x4210,0x4210,0x3DEF,0x39CE,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0421,
	0x0443,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0864,
	0x0864,0x1085,0x1085,0x1085,0x10A6,0x14C7,0x18C7,0x18E7,
	0x1CE8,0x1D08,0x2108,0x2109,0x2529,0x2529,0x2529,0x2529,

	0x2529,0x2109,0x2108,0x1CE8,0x18E7,0x14C7,0x14C7,0x10A6,
	0x1085,0x1085,0x0864,0x0864,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x4F7E,0x4F7E,0x4F7E,0x4F7E,0x475E,0x475E,0x475E,0x3B1D,
	0x3B1D,0x3B1D,0x36BB,0x36BB,0x36BB,0x36BB,0x3698,0x3698,

	0x4276,0x4276,0x4276,0x4276,0x4276,0x4E75,0x4E75,0x52B7,
	0x52B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4A52,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4631,0x4631,0x4631,0x4631,0x4210,0x4210,
	0x4210,0x3DEF,0x3DEF,0x3DEF,0x39CE,0x39CE,0x39CE,0x35AD,
	0x0000,0x0000,0x0421,0x0421,0x0842,0x0C63,0x0C63,0x10A6,
	0x14C7,0x18C7,0x18C7,0x1CE7,0x1CE8,0x2108,0x2109,0x2529,

	0x2529,0x2529,0x2108,0x2108,0x2108,0x2529,0x2529,0x2529,
	0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,
	0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,
	0x2529,0x2529,0x2529,0x2529,0x2129,0x2109,0x1D08,0x1CE8,
	0x18C7,0x14C7,0x10A6,0x0886,0x1085,0x0865,0x0864,0x0444,
	0x0444,0x0444,0x0444,0x0864,0x0864,0x0864,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,
	0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,0x0444,

	0x52B7,0x52B7,0x52B7,0x52B7,0x52B7,0x5AD7,0x5AF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4631,0x4631,0x4631,0x4210,
	0x4210,0x4210,0x3DEF,0x3DEF,0x3DEF,0x39CE,0x39CE,0x35AD,
	0x35AD,0x318C,0x39CE,0x4631,0x4631,0x4631,0x4210,0x4210,

	0x3DEF,0x3DEF,0x3DEF,0x39CE,0x39CE,0x39CE,0x39CE,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x318C,
	0x318C,0x318C,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x294A,
	0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,0x2529,0x2529,
	0x2529,0x2529,0x2108,0x2108,0x2108,0x2108,0x2108,0x2108,
	0x2108,0x2108,0x2108,0x2529,0x294A,0x294A,0x294A,0x294A,
	0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,0x2529,
	0x2529,0x2109,0x1D08,0x1CE8,0x18C7,0x14C7,0x10A6,0x10A6,

	0x1085,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,
	0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,0x0865,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,
	0x56B5,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,
	0x4E73,0x4A52,0x4A52,0x4A52,0x4631,0x4631,0x4210,0x4210,
	0x3DEF,0x3DEF,0x39CE,0x39CE,0x35AD,0x35AD,0x318C,0x318C,

	0x318C,0x318C,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x318C,
	0x35AD,0x39CE,0x4210,0x4A52,0x4E73,0x4E73,0x4E73,0x4E73,
	0x4E73,0x4A52,0x4631,0x4E73,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4A52,0x4E73,0x4E73,0x4E73,0x4E73,0x4A52,0x4E73,0x4E73,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x56B5,0x56B5,0x4631,0x4631,
	0x4210,0x318C,0x2529,0x2529,0x2529,0x2529,0x2529,0x2529,
	0x2529,0x2529,0x294A,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,

	0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x294A,0x294A,0x294A,
	0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,
	0x294A,0x294A,0x294A,0x2529,0x2129,0x2108,0x1CE8,0x18E7,
	0x18C7,0x14C7,0x0886,0x0864,0x0865,0x0865,0x0865,0x0865,
	0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,0x56B5,0x56B5,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,0x4A52,
	0x4A52,0x4631,0x4210,0x4210,0x3DEF,0x3DEF,0x39CE,0x39CE,

	0x35AD,0x35AD,0x318C,0x318C,0x318C,0x318C,0x2D6B,0x2D6B,
	0x2D6B,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x35AD,0x35AD,0x3DEF,0x4210,
	0x4631,0x4631,0x4631,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,
	0x4631,0x4A52,0x4631,0x4631,0x4210,0x4631,0x4631,0x4210,
	0x4210,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,0x4A52,
	0x4A52,0x4631,0x4631,0x4631,0x3DEF,0x318C,0x2529,0x0842,

	0x1CE7,0x294A,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x1CE7,
	0x2108,0x2529,0x294A,0x294A,0x294A,0x294A,0x294A,0x294A,
	0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,
	0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,0x2D6B,
	0x2D6B,0x2D6B,0x2D6B,0x318C,0x318C,0x318C,0x35AD,0x39CE,
	0x39CE,0x3DEF,0x3DEF,0x254B,0x0421,0x0421,0x0421,0x0421,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x5294,0x5294,
	0x5294,0x4E73,0x4E73,0x4A52,0x4631,0x4631,0x4210,0x3DEF,

	0x3DEF,0x39CE,0x39CE,0x35AD,0x35AD,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x5EF7,0x77BD,0x77BD,0x739C,0x739C,0x739C,0x6F7B,
	0x6F7B,0x6F7B,0x6F7B,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,
	0x6739,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,
	0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,

	0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4631,0x4210,0x35AD,0x1084,0x0000,0x0000,
	0x0842,0x0421,0x0000,0x0000,0x0000,0x0000,0x0842,0x14A5,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x2108,0x294A,
	0x2D6B,0x318C,0x318C,0x318C,0x318C,0x2D6B,0x2D6B,0x318C,
	0x318C,0x318C,0x35AD,0x35AD,0x35AD,0x39CE,0x3DEF,0x3DEF,
	0x4210,0x4210,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,
	0x4631,0x4631,0x4631,0x4210,0x0421,0x0000,0x0000,0x0000,

	0x5EF7,0x5AD6,0x4A52,0x4210,0x39CE,0x35AD,0x35AD,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x6318,0x7FFF,0x7FFF,0x7BDE,0x77BD,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,

	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x4631,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0C63,0x18C6,0x1CE7,0x1CE7,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x2529,0x2D6B,0x318C,
	0x35AD,0x39CE,0x39CE,0x3DEF,0x3DEF,0x4210,0x4631,0x4631,
	0x4631,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,

	0x4A52,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,0x4210,
	0x3DEF,0x39CE,0x318C,0x294A,0x0842,0x0000,0x0000,0x0000,
	0x5EF7,0x4E73,0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,
	0x318C,0x318C,0x318C,0x318C,0x318C,0x318C,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,
	0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,

	0x39CE,0x5EF7,0x7FFF,0x7FFF,0x4631,0x294A,0x2D6B,0x2D8C,
	0x2D8C,0x2D8C,0x31AD,0x31AD,0x31AD,0x31AD,0x31AD,0x35CD,
	0x35AE,0x35AE,0x39EF,0x39EF,0x39EF,0x39EF,0x3DEF,0x3E10,
	0x4210,0x4230,0x4631,0x4651,0x4651,0x4A52,0x4672,0x4672,
	0x4672,0x4E93,0x5294,0x56B4,0x56B5,0x56D5,0x5AB5,0x5AD6,
	0x5EF6,0x6B5A,0x7FFF,0x7FFF,0x4631,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0C63,0x18C6,0x2108,0x2108,0x2529,0x2529,
	0x294A,0x2D6B,0x318C,0x35AD,0x39CE,0x3DEF,0x4210,0x4A52,

	0x4A52,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4A52,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4631,0x4210,
	0x3DEF,0x35AD,0x2D6B,0x2529,0x2108,0x18C6,0x14A5,0x1084,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0842,0x0000,0x0000,0x0000,
	0x56B5,0x4A52,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,0x35AD,
	0x35AD,0x35AD,0x35AD,0x35AD,0x39CE,0x39CE,0x39CE,0x39CE,
	0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,

	0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x3DEF,0x3DEF,0x3DEF,
	0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,
	0x3DEF,0x5EF7,0x7FFF,0x7FFF,0x5AD6,0x56B5,0x52B5,0x5294,
	0x5294,0x5294,0x4E73,0x4E73,0x4E73,0x4A52,0x4A52,0x4651,
	0x4631,0x4631,0x4211,0x4211,0x4211,0x4210,0x3E10,0x3E10,
	0x3E10,0x3DF0,0x3E10,0x3E10,0x3E10,0x3E10,0x3E10,0x3E10,
	0x39EF,0x39EF,0x39EF,0x39EF,0x39D0,0x31AF,0x31AD,0x31AD,
	0x294A,0x4E73,0x7FFF,0x7FFF,0x4631,0x0000,0x0000,0x0000,

	0x1084,0x294A,0x39CE,0x3DEF,0x4210,0x4210,0x4631,0x4631,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4210,
	0x39CE,0x318C,0x2D6B,0x2529,0x1CE7,0x18C6,0x1084,0x0C63,
	0x0C63,0x0C63,0x0C63,0x1084,0x14A5,0x18C6,0x2108,0x294A,
	0x2D6B,0x35AD,0x39CE,0x35AD,0x0000,0x0000,0x0000,0x0000,
	0x4631,0x4210,0x35AD,0x35AD,0x39CE,0x39CE,0x39CE,0x39CE,
	0x39CE,0x35AD,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,

	0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,
	0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x4210,0x4210,0x4210,
	0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,
	0x4210,0x5294,0x6318,0x6739,0x6739,0x6739,0x6B5A,0x6B5A,
	0x6F7B,0x6F7B,0x6F7B,0x739C,0x739C,0x739C,0x739C,0x77BD,
	0x77BD,0x77BD,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x739C,0x6F7B,

	0x6F7B,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,0x6739,0x6318,
	0x5EF7,0x6B5A,0x7FFF,0x7FFF,0x4631,0x0C63,0x1CE7,0x1CE7,
	0x318C,0x4A52,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,
	0x4E73,0x4E73,0x4E73,0x4A52,0x4A52,0x4A52,0x4210,0x39CE,
	0x35AD,0x2D6B,0x2529,0x2108,0x18C6,0x1084,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x1084,0x18C6,0x1CE7,0x2529,0x2D6B,
	0x318C,0x39CE,0x3DEF,0x4210,0x4210,0x3DEF,0x35AD,0x2D6B,
	0x294A,0x2108,0x18C6,0x1084,0x0842,0x0000,0x0000,0x0000,

	0x4210,0x4210,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,0x3DEF,
	0x4210,0x3DEF,0x3DEF,0x39CE,0x39CE,0x39CE,0x3DEF,0x3DEF,
	0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,0x3DEF,
	0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,
	0x4210,0x4210,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,
	0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,0x4A52,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,

	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4E73,0x4E73,0x5294,0x56B5,0x5AD6,0x5EF7,0x6318,0x6318,
	0x6739,0x6739,0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6B5A,
	0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x4E73,0x4210,0x4631,0x4210,
	0x4631,0x4E73,0x4E73,0x4E73,0x4E73,0x4A52,0x4210,0x39CE,
	0x318C,0x294A,0x2108,0x1CE7,0x14A5,0x1084,0x0C63,0x0C63,
	0x1084,0x1084,0x1084,0x14A5,0x18C6,0x2108,0x294A,0x2D6B,
	0x35AD,0x39CE,0x4210,0x4631,0x4631,0x4210,0x39CE,0x318C,

	0x294A,0x2108,0x1CE7,0x14A5,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x1084,0x18C6,0x18C6,0x0421,0x0000,0x0000,0x0000,
	0x39D0,0x35AD,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,0x3DEF,
	0x4210,0x4210,0x4210,0x4631,0x4210,0x3DEF,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,0x4210,
	0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,0x4631,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,
	0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,

	0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x56B5,0x56B5,0x5AD6,0x5EF7,0x5EF7,0x6318,0x6318,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,
	0x6318,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x56B5,0x56B5,0x5294,0x5294,0x5294,0x4E73,0x4A52,0x4210,
	0x2D6B,0x2529,0x2108,0x18C6,0x14A5,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x18C6,0x1CE7,0x2529,0x294A,0x318C,

	0x39CE,0x3DEF,0x4631,0x4A52,0x4631,0x4210,0x3DEF,0x35AD,
	0x294A,0x2529,0x1CE7,0x14A5,0x1084,0x0C63,0x0C63,0x0C63,
	0x0C63,0x1084,0x14A5,0x1CE7,0x2529,0x294A,0x318C,0x39CE,
	0x3DEF,0x3DEF,0x35AD,0x2108,0x0421,0x0000,0x0000,0x0000,
	0x0444,0x0865,0x318C,0x35AD,0x39CE,0x39CE,0x3DEF,0x3DEF,
	0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4631,0x4210,
	0x3DEF,0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4631,
	0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4A52,0x4E73,0x4E73,

	0x4E73,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5EF7,0x5EF7,0x5EF7,
	0x6318,0x6739,0x6739,0x6B5A,0x6F7B,0x6F7B,0x6F7B,0x6F7B,
	0x6F7B,0x6F7B,0x6F7B,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,
	0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x56B5,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4631,0x4631,

	0x18C6,0x14A5,0x14A5,0x18C6,0x2108,0x294A,0x2D6B,0x35AD,
	0x3DEF,0x4210,0x4A52,0x4A52,0x4A52,0x4631,0x3DEF,0x35AD,
	0x2D6B,0x2529,0x1CE7,0x18C6,0x1084,0x0C63,0x0C63,0x0C63,
	0x0C63,0x1084,0x14A5,0x18C6,0x2108,0x294A,0x318C,0x39CE,
	0x3DEF,0x4210,0x3DEF,0x35AD,0x2D6B,0x2529,0x1CE7,0x14A5,
	0x1084,0x0C63,0x0C63,0x0C63,0x0842,0x0000,0x0000,0x0000,
	0x0865,0x0866,0x318C,0x35AD,0x39CE,0x39CE,0x3DEF,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4A52,0x4A52,

	0x4E73,0x4A52,0x4631,0x3DEF,0x4210,0x4210,0x4631,0x4A52,
	0x4E73,0x4E73,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x5294,0x56B5,0x56B5,0x56B5,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5EF7,0x5EF7,0x6318,0x6739,0x6B5A,0x6B5A,0x6F7B,
	0x739C,0x77BD,0x77BD,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x77BD,0x77BD,0x739C,0x739C,0x6F7B,0x6F7B,0x6B5A,
	0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,

	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x56B5,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,
	0x4210,0x4631,0x4E73,0x4E73,0x4E73,0x4A52,0x4210,0x39CE,
	0x318C,0x294A,0x2108,0x18C6,0x1084,0x1084,0x0C63,0x0C63,
	0x1084,0x1084,0x1084,0x18C6,0x2108,0x294A,0x318C,0x35AD,
	0x3DEF,0x4210,0x4210,0x3DEF,0x318C,0x2D6B,0x2108,0x18C6,
	0x14A5,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x14A5,0x18C6,
	0x2108,0x294A,0x318C,0x2108,0x0000,0x0000,0x0000,0x0000,

	0x0886,0x0886,0x2D6B,0x35AD,0x35AD,0x39CE,0x3DEF,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4A52,0x4A52,
	0x4E73,0x4E73,0x4E73,0x5294,0x4A52,0x4631,0x4210,0x4210,
	0x4A52,0x4E73,0x5294,0x5294,0x56B5,0x56B5,0x56B5,0x5AD6,
	0x5AD6,0x5EF7,0x6318,0x6739,0x6B5A,0x6F7B,0x739C,0x77BD,
	0x7BDE,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7BDE,0x7BDE,0x77BD,0x77BD,0x77BD,0x739C,0x739C,
	0x739C,0x739C,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6B5A,0x6B5A,

	0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6318,0x6318,0x5EF7,0x5AD6,0x5AD6,0x5AD6,0x6739,
	0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,0x5AB5,0x5E94,0x5A73,
	0x5673,0x4E73,0x56B5,0x56B5,0x5294,0x5294,0x4A52,0x4210,
	0x35AD,0x294A,0x2529,0x1CE7,0x14A5,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x18C6,0x1CE7,0x2529,0x2D6B,0x35AD,
	0x3DEF,0x4210,0x4631,0x4210,0x3DEF,0x318C,0x294A,0x2108,
	0x18C6,0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x1084,0x14A5,

	0x1CE7,0x2529,0x294A,0x318C,0x39CE,0x39CE,0x35AD,0x2D6B,
	0x2529,0x1CE7,0x14A5,0x0C63,0x0421,0x0000,0x0000,0x0000,
	0x0866,0x0866,0x254B,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,0x4A52,
	0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x5294,0x4E73,
	0x4631,0x4A52,0x4A52,0x4E73,0x6739,0x6F7B,0x77BD,0x7BDE,
	0x7BDE,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x77BD,

	0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6B5A,0x6B5A,
	0x6B5A,0x6B5A,0x6739,0x6318,0x5EF7,0x5EF7,0x5AD6,0x5AD6,
	0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x5AD6,0x6318,
	0x5AD6,0x6F7B,0x5EF7,0x5AD6,0x5673,0x5E94,0x5A52,0x5230,
	0x4E52,0x4631,0x56B5,0x5AD6,0x5AD6,0x56B5,0x5294,0x4E73,
	0x18C6,0x1084,0x1084,0x14A5,0x1CE7,0x2529,0x2D6B,0x35AD,
	0x39CE,0x4210,0x4A52,0x4A52,0x4631,0x3DEF,0x318C,0x294A,

	0x2108,0x18C6,0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x1084,
	0x14A5,0x1CE7,0x2529,0x2D6B,0x35AD,0x3DEF,0x3DEF,0x39CE,
	0x318C,0x294A,0x2108,0x18C6,0x1084,0x0C63,0x0842,0x0C63,
	0x0C63,0x1084,0x18C6,0x14A5,0x0421,0x0000,0x0000,0x0000,
	0x0865,0x0865,0x2529,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,0x4A52,
	0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,0x56B5,
	0x56B5,0x4631,0x4210,0x5AD6,0x7BDE,0x7FFF,0x7FFF,0x7FFF,

	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x77BD,0x77BD,
	0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x6F7B,0x6F7B,0x6739,0x6318,0x5EF7,0x5AD6,0x56B5,
	0x56B5,0x5AD6,0x5AD6,0x5AD6,0x5EF7,0x5EF7,0x5AD6,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x56B5,0x56B5,0x56B5,0x5A73,0x5A73,0x5A52,0x5230,
	0x3DEF,0x4E73,0x56B5,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,

	0x4210,0x4631,0x4A52,0x4E73,0x4E73,0x4631,0x39CE,0x318C,
	0x294A,0x2108,0x18C6,0x1084,0x0C63,0x0C63,0x1084,0x1084,
	0x1084,0x14A5,0x1CE7,0x2529,0x2D6B,0x35AD,0x3DEF,0x4210,
	0x3DEF,0x35AD,0x2D6B,0x2529,0x1CE7,0x1084,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x14A5,0x1CE7,0x2529,0x2D6B,0x35AD,
	0x39CE,0x318C,0x294A,0x14A5,0x0421,0x0000,0x0000,0x0000,
	0x0865,0x0445,0x2109,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,0x4A52,

	0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,0x56B5,
	0x56B5,0x4A52,0x4210,0x6739,0x77BD,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x77BD,0x77BD,0x77BD,
	0x77BD,0x77BD,0x6F7B,0x6B5A,0x6739,0x6318,0x5EF7,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x5AD6,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,

	0x56B5,0x56B5,0x56B5,0x5AB5,0x5E94,0x5A73,0x5673,0x4A31,
	0x4A52,0x4631,0x56B5,0x5AD6,0x5AD6,0x56B5,0x4E73,0x4631,
	0x35AD,0x2D6B,0x2529,0x18C6,0x1084,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x14A5,0x1CE7,0x2529,0x2D6B,0x35AD,0x3DEF,
	0x4631,0x4631,0x39CE,0x318C,0x294A,0x1CE7,0x14A5,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x1084,0x18C6,0x2108,0x2D6B,
	0x35AD,0x39CE,0x3DEF,0x318C,0x294A,0x2108,0x18C6,0x1084,
	0x0842,0x0842,0x0C63,0x0C63,0x0421,0x0000,0x0000,0x0000,

	0x0866,0x0866,0x2109,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,0x4A52,
	0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,0x56B5,
	0x56B5,0x4A52,0x4210,0x6318,0x77BD,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x77BD,0x739C,0x6B5A,0x6739,0x6318,0x6318,0x5EF7,
	0x5AD6,0x5AD6,0x5AD6,0x6318,0x6318,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,

	0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x5AD6,0x56B5,0x5294,0x5294,0x56B5,
	0x56B5,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x5294,0x5294,
	0x18C6,0x14A5,0x14A5,0x18C6,0x2108,0x294A,0x318C,0x39CE,
	0x4210,0x4631,0x4631,0x3DEF,0x35AD,0x294A,0x2108,0x18C6,
	0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x1084,0x18C6,0x2108,
	0x294A,0x318C,0x39CE,0x3DEF,0x3DEF,0x318C,0x294A,0x1CE7,

	0x14A5,0x0C63,0x0842,0x0C63,0x0C63,0x0C63,0x14A5,0x1CE7,
	0x2529,0x2D6B,0x35AD,0x14A5,0x0000,0x0000,0x0000,0x0000,
	0x0865,0x0865,0x18E7,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4A52,
	0x4A52,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x5294,0x56B5,
	0x56B5,0x4A52,0x4210,0x6318,0x77BD,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7BDE,0x6B5A,0x6B5A,0x6739,0x6318,0x5EF7,
	0x5EF7,0x5EF7,0x6318,0x6739,0x6739,0x6B5A,0x6B5A,0x6B5A,

	0x6F7B,0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6F7B,0x6F7B,0x6F7B,
	0x6F7B,0x6B5A,0x6B5A,0x6739,0x6739,0x6318,0x5EF7,0x5EF7,
	0x5EF7,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x5AD6,0x5AD6,0x5294,0x56B5,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,
	0x4210,0x4631,0x4E73,0x5294,0x4A52,0x3DEF,0x318C,0x294A,
	0x1CE7,0x14A5,0x1084,0x0C63,0x1084,0x1084,0x1084,0x14A5,

	0x1CE7,0x2529,0x2D6B,0x35AD,0x3DEF,0x4210,0x39CE,0x318C,
	0x2529,0x1CE7,0x14A5,0x0C63,0x0C63,0x0C63,0x0C63,0x1084,
	0x14A5,0x2108,0x294A,0x318C,0x35AD,0x35AD,0x2D6B,0x2529,
	0x1CE7,0x1084,0x0C63,0x0842,0x0421,0x0000,0x0000,0x0000,
	0x0444,0x0444,0x14C7,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4A52,
	0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,
	0x56B5,0x4E73,0x4210,0x5EF7,0x77BD,0x7FFF,0x7FFF,0x7FFF,

	0x7FFF,0x7BDE,0x6F7B,0x5294,0x6318,0x6B5A,0x6B5A,0x6F7B,
	0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x6F7B,0x6F7B,0x6B5A,0x6739,0x6318,0x6318,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x5294,0x5294,0x5294,0x56B5,0x56B5,0x5294,0x5294,0x56B5,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x4E73,0x4210,

	0x2D6B,0x2529,0x18C6,0x14A5,0x1084,0x1084,0x1084,0x1084,
	0x14A5,0x18C6,0x2108,0x294A,0x35AD,0x3DEF,0x4210,0x4210,
	0x39CE,0x2D6B,0x2529,0x1CE7,0x14A5,0x0C63,0x0C63,0x0C63,
	0x0C63,0x1084,0x18C6,0x2108,0x294A,0x318C,0x39CE,0x39CE,
	0x318C,0x2529,0x1CE7,0x14A5,0x0C63,0x0842,0x0C63,0x0C63,
	0x1084,0x18C6,0x2108,0x0C63,0x0000,0x0000,0x0000,0x0000,
	0x0886,0x0886,0x10A6,0x35AD,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,0x4A52,

	0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,
	0x56B5,0x4E73,0x4210,0x5AD6,0x739C,0x7BDE,0x7FFF,0x7BDE,
	0x7BDE,0x7BDE,0x739C,0x5294,0x4E73,0x5294,0x5AD6,0x6F7B,
	0x739C,0x739C,0x739C,0x6F7B,0x6F7B,0x6B5A,0x6739,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,

	0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,
	0x5294,0x56B5,0x5AD6,0x5AD6,0x56B5,0x56B5,0x5294,0x4E73,
	0x18C6,0x14A5,0x18C6,0x2108,0x294A,0x318C,0x39CE,0x4210,
	0x4631,0x4210,0x39CE,0x2D6B,0x2529,0x1CE7,0x1084,0x1084,
	0x0C63,0x0C63,0x0C63,0x1084,0x18C6,0x2108,0x294A,0x35AD,
	0x3DEF,0x39CE,0x318C,0x294A,0x2108,0x14A5,0x0C63,0x0C63,
	0x0C63,0x0C63,0x1084,0x18C6,0x2108,0x294A,0x35AD,0x3DEF,
	0x3DEF,0x4210,0x3DEF,0x0842,0x0000,0x0000,0x0000,0x0000,

	0x0886,0x0866,0x10A6,0x318C,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,
	0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,
	0x56B5,0x4E73,0x4210,0x5AD6,0x739C,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x739C,0x4A52,0x4E73,0x4E73,0x4A52,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,

	0x5AD6,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x5AD6,
	0x5AD6,0x5EF7,0x6318,0x6318,0x6318,0x5EF7,0x5AD6,0x56B5,
	0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,
	0x4631,0x4E73,0x5294,0x4A52,0x3DEF,0x318C,0x2529,0x18C6,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x18C6,0x2529,
	0x2D6B,0x35AD,0x3DEF,0x3DEF,0x35AD,0x2D6B,0x2108,0x18C6,
	0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x14A5,0x1CE7,0x294A,

	0x318C,0x39CE,0x4210,0x4210,0x4210,0x3DEF,0x39CE,0x318C,
	0x2529,0x1CE7,0x1084,0x0000,0x0000,0x0000,0x0000,0x0421,
	0x0865,0x0865,0x0886,0x318C,0x35AD,0x39CE,0x39CE,0x3DEF,
	0x3DEF,0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,
	0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,0x56B5,
	0x56B5,0x5294,0x4210,0x56B5,0x739C,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x6F7B,0x4A52,0x4E73,0x4A52,0x4A52,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,

	0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5EF7,
	0x6318,0x6318,0x6318,0x5EF7,0x5AD6,0x5AD6,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x5294,0x4A52,0x3DEF,
	0x2529,0x18C6,0x1084,0x1084,0x1084,0x1084,0x1084,0x14A5,
	0x1CE7,0x2529,0x2D6B,0x39CE,0x4210,0x4210,0x39CE,0x2D6B,

	0x2529,0x18C6,0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x14A5,
	0x1CE7,0x2529,0x318C,0x39CE,0x4210,0x4631,0x4210,0x4210,
	0x3DEF,0x35AD,0x2D6B,0x2529,0x18C6,0x1084,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0000,0x0000,0x0000,0x0421,0x0444,
	0x0445,0x0445,0x0865,0x294A,0x35AD,0x35AD,0x39CE,0x39CE,
	0x3DEF,0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,0x4A52,
	0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x56B5,0x5294,0x4210,0x5294,0x739C,0x7BDE,0x7BDE,0x7BDE,

	0x7BDE,0x7BDE,0x6B5A,0x4631,0x4E73,0x4E73,0x4A52,0x6318,
	0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5EF7,0x56B5,0x4A52,0x5EF7,0x5AD6,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4A52,0x4631,0x4631,

	0x14A5,0x14A5,0x1CE7,0x294A,0x35AD,0x3DEF,0x4631,0x4631,
	0x3DEF,0x318C,0x2529,0x1CE7,0x14A5,0x0C63,0x0C63,0x1084,
	0x1084,0x1084,0x18C6,0x2529,0x2D6B,0x39CE,0x4210,0x4631,
	0x4631,0x4631,0x4210,0x3DEF,0x35AD,0x294A,0x2108,0x18C6,
	0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0842,0x0000,0x0000,0x0421,0x0864,0x0866,
	0x0866,0x0866,0x0865,0x0865,0x1CE8,0x35AD,0x39CE,0x39CE,
	0x3DEF,0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,

	0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x56B5,0x5294,0x4210,0x5294,0x6F7B,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x77BD,0x6739,0x4A52,0x5294,0x4E73,0x4A52,0x6318,
	0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x5EF7,0x5EF7,
	0x5EF7,0x5AD6,0x5AD6,0x5AD6,0x5EF7,0x6318,0x6318,0x6318,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5AD6,0x5AD6,0x56B5,0x5294,0x4E73,0x4A52,0x4632,
	0x4632,0x4654,0x4656,0x39D0,0x6B5A,0x5AD6,0x56B5,0x56B5,

	0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,
	0x4A52,0x4E73,0x4631,0x39CE,0x2D6B,0x2108,0x14A5,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x18C6,0x2108,0x2D6B,0x35AD,
	0x3DEF,0x4631,0x4A52,0x4631,0x4631,0x4210,0x39CE,0x318C,
	0x294A,0x1CE7,0x14A5,0x1084,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0842,0x0421,0x0443,0x0865,0x0886,0x0886,

	0x0866,0x0866,0x0866,0x0866,0x0864,0x1084,0x2D6B,0x39CE,
	0x3DEF,0x3DEF,0x4210,0x4210,0x4210,0x4631,0x4631,0x4A52,
	0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x56B5,0x5294,0x4210,0x4E73,0x6F7B,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x739C,0x6739,0x5EF7,0x6318,0x6318,0x5294,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x56B5,0x5294,0x4E73,

	0x4A52,0x4E73,0x4A74,0x56B5,0x5AF7,0x5EF7,0x5AD6,0x4A53,
	0x35D1,0x39D0,0x35AE,0x35AE,0x5EF7,0x5AD6,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4210,0x318C,
	0x14A5,0x1084,0x1084,0x1084,0x1084,0x1084,0x18C6,0x2108,
	0x294A,0x35AD,0x3DEF,0x4631,0x4A52,0x4A52,0x4A52,0x4631,
	0x4210,0x39CE,0x2D6B,0x2529,0x18C6,0x14A5,0x1084,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,

	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0863,0x0864,0x0865,0x0866,0x0886,0x0886,0x0886,
	0x0866,0x0866,0x0866,0x0866,0x0864,0x0842,0x0842,0x2108,
	0x39CE,0x3DEF,0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,
	0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x56B5,0x5294,0x4210,0x4E73,0x6F7B,0x77BD,0x7BDE,0x7BDE,
	0x77BD,0x6B5A,0x6B5A,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,

	0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5AD6,0x56B5,
	0x4E73,0x4E73,0x4E73,0x4E73,0x56B5,0x5AD6,0x6318,0x6318,
	0x5AD6,0x4E73,0x4210,0x3DEF,0x35AD,0x35AD,0x3DEF,0x4631,
	0x4E73,0x5294,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4A52,0x4210,0x3DEF,
	0x14A5,0x1CE7,0x294A,0x318C,0x3DEF,0x4631,0x4E73,0x4E73,
	0x4A52,0x4A52,0x4631,0x3DEF,0x35AD,0x294A,0x2108,0x18C6,

	0x1084,0x1084,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0842,0x0842,0x0842,
	0x0842,0x0865,0x0865,0x0865,0x0865,0x0866,0x0866,0x0866,
	0x0866,0x0866,0x0866,0x0866,0x0864,0x0842,0x0842,0x0842,
	0x1084,0x318C,0x3DEF,0x4210,0x4210,0x4631,0x4631,0x4631,
	0x4A52,0x4A52,0x4A52,0x4E73,0x4E73,0x5294,0x5294,0x5294,
	0x5294,0x56B5,0x4210,0x4A52,0x6F7B,0x77BD,0x7BDE,0x77BD,

	0x77BD,0x6B5A,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,0x6318,0x5EF7,
	0x5AD6,0x5294,0x4E73,0x4E73,0x4E73,0x5294,0x5AD6,0x5EF7,
	0x6739,0x6318,0x56B5,0x4A52,0x4210,0x39CE,0x35AD,0x39CE,
	0x4210,0x4A52,0x5294,0x56B5,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4E73,

	0x4E73,0x4E73,0x4E73,0x4E73,0x4A52,0x4631,0x3DEF,0x318C,
	0x294A,0x1CE7,0x14A5,0x1084,0x1084,0x1084,0x1084,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0842,0x0842,0x0842,0x0842,0x0864,0x0865,0x0866,
	0x0466,0x0466,0x0466,0x0865,0x0865,0x0865,0x0865,0x0865,
	0x0866,0x0866,0x0866,0x0866,0x0865,0x0842,0x0842,0x0842,
	0x0842,0x0842,0x2108,0x3DEF,0x4210,0x4631,0x4631,0x4631,

	0x4A52,0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x56B5,0x4210,0x4A52,0x6B5A,0x77BD,0x77BD,0x77BD,
	0x739C,0x6B5A,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x5EF7,0x56B5,0x5294,0x4E73,0x4E73,0x5294,0x56B5,
	0x5EF7,0x6739,0x6B5A,0x5EF7,0x5294,0x4631,0x3DEF,0x39CE,
	0x35AD,0x39CE,0x4631,0x4E73,0x56B5,0x5AD6,0x5AD6,0x5EF7,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5294,
	0x4A52,0x4631,0x4631,0x4631,0x4E73,0x56B5,0x56B5,0x56B5,

	0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x5294,0x5294,0x5294,0x5294,0x4E73,0x4E73,0x4A52,
	0x4210,0x39CE,0x2D6B,0x2529,0x1CE7,0x14A5,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0842,0x0842,0x0842,0x0443,
	0x0864,0x0865,0x0866,0x0886,0x0887,0x0887,0x0CA8,0x0CA9,
	0x0CA9,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0887,

	0x0866,0x0866,0x0866,0x0866,0x0866,0x0865,0x0842,0x0842,
	0x0842,0x0842,0x0842,0x1084,0x35AD,0x4210,0x4631,0x4631,
	0x4A52,0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x56B5,0x4631,0x4631,0x6B5A,0x77BD,0x77BD,0x77BD,
	0x6B5A,0x6739,0x6739,0x6739,0x5EF7,0x4A74,0x4654,0x4654,
	0x4654,0x4656,0x62F8,0x6B5A,0x6739,0x5AD6,0x4E73,0x4210,
	0x39CE,0x35AD,0x35AD,0x3DEF,0x4A52,0x56B5,0x5AD6,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,

	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,
	0x5AD6,0x5AD6,0x56B5,0x56B5,0x56B5,0x5294,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x5294,0x5294,0x5294,0x5294,0x5294,
	0x5294,0x4E73,0x4A52,0x4210,0x35AD,0x294A,0x2108,0x18C6,
	0x14A5,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x0C63,
	0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,0x0C63,
	0x0842,0x0842,0x0863,0x0864,0x0865,0x0866,0x0866,0x0886,

	0x0887,0x0887,0x0CA8,0x0CA9,0x0CA9,0x0CA9,0x0CA8,0x0CA8,
	0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,
	0x0887,0x0887,0x0887,0x0887,0x0887,0x0886,0x0886,0x0842,
	0x0842,0x0842,0x0842,0x0842,0x0842,0x2529,0x4210,0x4631,
	0x4A52,0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x56B5,0x4631,0x4631,0x6739,0x77BD,0x77BD,0x77BD,
	0x6B5A,0x6739,0x6739,0x6739,0x5294,0x56BA,0x56BA,0x4656,
	0x3A12,0x39D0,0x39CE,0x35AD,0x35AD,0x4210,0x4E73,0x56B5,

	0x5EF7,0x5EF7,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x56B5,
	0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,
	0x56B5,0x56B5,0x56B5,0x5294,0x4E73,0x4631,0x3DEF,0x318C,
	0x294A,0x1CE7,0x18C6,0x14A5,0x14A5,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x0C63,

	0x0C63,0x0C63,0x0C63,0x0842,0x0842,0x0863,0x0864,0x0865,
	0x0886,0x0887,0x0CA8,0x10C9,0x10C9,0x10EA,0x10EB,0x10EA,
	0x10EA,0x10EA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x10C9,
	0x10C9,0x10C9,0x0CA9,0x0CA9,0x0CA9,0x0CA9,0x0CA9,0x0CA8,
	0x0886,0x0886,0x0887,0x0886,0x0886,0x0886,0x0887,0x0887,
	0x0864,0x0842,0x0842,0x0842,0x0842,0x0842,0x14A5,0x39CE,
	0x4631,0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,0x5294,
	0x5294,0x5294,0x4631,0x4210,0x6739,0x77BD,0x77BD,0x739C,

	0x6B5A,0x6739,0x6739,0x6739,0x56B5,0x35AE,0x39CE,0x4631,
	0x5294,0x5AD6,0x5EF7,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x5AD6,0x56B5,0x56B5,0x56B5,0x56B5,0x56B5,0x5294,0x4E73,
	0x4631,0x39CE,0x2D6B,0x2529,0x1CE7,0x18C6,0x14A5,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x1084,0x1084,0x1084,

	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x0C63,0x0C63,0x0C63,0x0842,
	0x0863,0x0864,0x0865,0x0886,0x0887,0x10A6,0x0CA8,0x10C9,
	0x0CCA,0x10EA,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,
	0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EA,0x10EA,0x10EB,
	0x10EB,0x14EB,0x14EB,0x10EB,0x10EA,0x10EA,0x10EA,0x10EA,
	0x0866,0x0866,0x0866,0x0866,0x0866,0x0866,0x0886,0x0887,
	0x0887,0x0865,0x0842,0x0842,0x0842,0x0842,0x0842,0x0C63,

	0x2529,0x4631,0x4A52,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,
	0x5294,0x5294,0x4631,0x4210,0x6318,0x77BD,0x77BD,0x6F7B,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,
	0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,0x5AD6,
	0x56B5,0x5294,0x4A52,0x4210,0x35AD,0x2D6B,0x2108,0x1CE7,

	0x18C6,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,0x1084,
	0x0C63,0x0C63,0x0863,0x0863,0x0864,0x0865,0x0886,0x0887,
	0x0CA8,0x0CA8,0x10C9,0x0CCA,0x10EB,0x10EB,0x10EB,0x10EB,
	0x10EB,0x10EB,0x10EB,0x10EB,0x10EA,0x10EA,0x0CCA,0x0CCA,
	0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x10EA,
	0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,

	0x0866,0x0886,0x0886,0x0887,0x0887,0x0887,0x0887,0x0887,
	0x0887,0x0887,0x0886,0x0842,0x0842,0x0842,0x0842,0x0842,
	0x0842,0x14A5,0x3DEF,0x4A52,0x4E73,0x4E73,0x4E73,0x5294,
	0x5294,0x5294,0x4A52,0x4210,0x6318,0x739C,0x77BD,0x6B5A,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x5AD6,

	0x5AD6,0x5AD6,0x5AD6,0x56B5,0x5294,0x4A52,0x3DEF,0x318C,
	0x294A,0x2108,0x1CE7,0x18C6,0x18C6,0x18C6,0x18C6,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x1084,0x1084,0x1084,0x1084,
	0x1084,0x1084,0x1084,0x0C63,0x0C63,0x0C63,0x0863,0x0864,
	0x0865,0x0866,0x0886,0x0886,0x0887,0x14C7,0x14C7,0x14C7,
	0x10C9,0x10C9,0x10EB,0x10EB,0x150C,0x150C,0x150C,0x150C,
	0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,

	0x10EB,0x10EB,0x10EB,0x10EB,0x10EA,0x10EA,0x0CCA,0x10EA,
	0x10EA,0x10EA,0x10EA,0x10EA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,
	0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,0x0886,0x0887,
	0x0887,0x0887,0x0887,0x0887,0x0864,0x0842,0x0842,0x0842,
	0x0842,0x0842,0x0C63,0x294A,0x4A52,0x4E73,0x4E73,0x5294,
	0x5294,0x5294,0x4A52,0x4210,0x5EF7,0x739C,0x739C,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,

	0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5EF7,0x5AD6,0x56B5,0x5294,
	0x4631,0x39CE,0x318C,0x2529,0x2108,0x1CE7,0x18C6,0x18C6,
	0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x1084,0x1084,0x1084,0x0C63,
	0x0C63,0x0863,0x0864,0x0865,0x0866,0x0886,0x0887,0x0887,
	0x10A6,0x18C9,0x3DCE,0x5A52,0x6AD5,0x7317,0x7317,0x7317,

	0x7317,0x5A73,0x39AE,0x190B,0x0CCA,0x14EB,0x14EB,0x150C,
	0x150C,0x14EB,0x192D,0x216F,0x256F,0x256F,0x298F,0x256F,
	0x150C,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,
	0x14EB,0x10EB,0x10EB,0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,
	0x0866,0x0866,0x0886,0x0886,0x0866,0x0466,0x0466,0x0466,
	0x0866,0x0866,0x0866,0x0887,0x0887,0x0865,0x0842,0x0842,
	0x0842,0x0842,0x0842,0x0842,0x14A5,0x3DEF,0x4E73,0x5294,
	0x5294,0x5294,0x4A52,0x4210,0x5EF7,0x739C,0x6F7B,0x6739,

	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5EF7,0x5EF7,0x5EF7,
	0x5EF7,0x56B5,0x4E73,0x4210,0x35AD,0x2D6B,0x2529,0x2108,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x18C6,0x18C6,0x18C6,0x18C6,
	0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x14A5,
	0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,0x14A5,
	0x1084,0x1084,0x14A5,0x18C7,0x18C7,0x18C7,0x10A6,0x190B,

	0x256F,0x31D2,0x35D1,0x35D1,0x31AF,0x31AF,0x39D0,0x4632,
	0x5274,0x5A95,0x5AB6,0x5AB6,0x5AB6,0x5A95,0x5A95,0x5296,
	0x5298,0x5AB8,0x5AB8,0x52B7,0x5298,0x5298,0x4654,0x4654,
	0x4654,0x56BA,0x5EDB,0x5EDB,0x5EDB,0x5EDB,0x5EDB,0x5EDB,
	0x5EDB,0x5298,0x35D1,0x0CA9,0x0CA9,0x0CA9,0x0CCA,0x0CCA,
	0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,
	0x0445,0x0445,0x0445,0x0445,0x0445,0x0445,0x0445,0x0445,
	0x0466,0x0466,0x0466,0x0466,0x0866,0x0866,0x0866,0x0842,

	0x0842,0x0842,0x0842,0x0842,0x0842,0x0C63,0x2D6B,0x4E73,
	0x5294,0x5294,0x4A52,0x4210,0x5AD6,0x739C,0x6B5A,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6739,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,0x6318,
	0x6318,0x6318,0x5EF7,0x5AD6,0x56B5,0x4A52,0x3DEF,0x35AD,
	0x294A,0x2529,0x2108,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,
	0x1CE7,0x1CE7,0x1CE7,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,
	0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x14A5,0x14A5,

	0x14A5,0x14A5,0x14A5,0x14A5,0x1084,0x1084,0x0C63,0x0C63,
	0x0864,0x0865,0x35D1,0x4654,0x5298,0x5EDB,0x631D,0x673F,
	0x673F,0x673F,0x673F,0x631D,0x5EDB,0x5296,0x5296,0x5296,
	0x5296,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,
	0x4E75,0x56BA,0x631D,0x5EFC,0x5EFC,0x5EFC,0x56BA,0x4E75,
	0x4E75,0x4E75,0x56BA,0x5EFC,0x5EDB,0x5EDB,0x5EDB,0x5EDB,
	0x5EDB,0x5EDB,0x5EDB,0x4656,0x14EB,0x0CA9,0x0CA9,0x0CCA,
	0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,

	0x0466,0x0466,0x0466,0x0466,0x0466,0x0466,0x0466,0x0466,
	0x0466,0x0466,0x0466,0x0466,0x0866,0x0866,0x0466,0x0466,
	0x0864,0x0842,0x0842,0x0842,0x0842,0x0842,0x0842,0x18C6,
	0x4210,0x5294,0x4E73,0x4210,0x56B5,0x6F7B,0x6B5A,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,
	0x6318,0x6318,0x6318,0x6318,0x6318,0x5EF7,0x5AD6,0x5294,
	0x4631,0x39CE,0x318C,0x294A,0x2529,0x2108,0x2108,0x2108,
	0x2108,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,

	0x1CE7,0x1CE7,0x1CE7,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,
	0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x14A5,0x14A5,
	0x1084,0x0C63,0x0C63,0x0864,0x0865,0x0886,0x0887,0x0887,
	0x0887,0x0887,0x39F3,0x673F,0x673F,0x673F,0x673F,0x673F,
	0x673F,0x673F,0x673F,0x673F,0x631D,0x56BA,0x5296,0x5296,
	0x5296,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,0x4E75,
	0x4E75,0x4E75,0x56BA,0x631D,0x631D,0x631D,0x5EFC,0x56BA,
	0x4E75,0x4654,0x4654,0x52B7,0x5EFC,0x5EFC,0x5EFC,0x5EFC,

	0x5EFC,0x5EFC,0x5EDB,0x5EDB,0x56BA,0x256E,0x0CCA,0x0CCA,
	0x0CCA,0x0CCA,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,0x0CCA,
	0x0866,0x0467,0x0887,0x0887,0x0887,0x0887,0x0467,0x0866,
	0x0467,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,
	0x0887,0x0866,0x0842,0x0842,0x0842,0x0842,0x0842,0x0842,
	0x0C63,0x2D6B,0x4A52,0x4210,0x56B5,0x6F7B,0x6B5A,0x6739,
	0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6739,0x6318,
	0x5EF7,0x56B5,0x4E73,0x4210,0x39CE,0x2D6B,0x294A,0x2529,

	0x2529,0x2108,0x2108,0x2108,0x2108,0x2108,0x2108,0x2108,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,
	0x1CE7,0x1CE7,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,0x18C6,
	0x18C6,0x18C6,0x14A5,0x1084,0x1084,0x0C63,0x0863,0x0864,
	0x0865,0x0886,0x0887,0x0887,0x0887,0x0CA8,0x252B,0x39D0,
	0x5A52,0x5E94,0x5A95,0x673F,0x6B5F,0x6B5F,0x673F,0x673F,
	0x673F,0x673F,0x673F,0x673F,0x673F,0x631D,0x52B7,0x5296,
	0x5296,0x5296,0x5296,0x5296,0x4E75,0x5296,0x5296,0x4E75,

	0x4E75,0x4E75,0x4E75,0x56BA,0x5EDB,0x5EDB,0x5EDB,0x5EDB,
	0x56BA,0x4E75,0x4E75,0x4E75,0x56BA,0x5EFC,0x5EFC,0x5EFC,
	0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x5EDB,0x39F3,0x0CCA,
	0x0CCA,0x0CCA,0x0CCA,0x10EB,0x10EB,0x10EB,0x10EB,0x10EB,
	0x0887,0x0887,0x0467,0x0467,0x0466,0x0466,0x0466,0x0466,
	0x0467,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,
	0x0887,0x0887,0x0866,0x0864,0x0842,0x0842,0x0842,0x0842,
	0x0842,0x0842,0x18C6,0x35AD,0x5294,0x6F7B,0x6B5A,0x6739,

	0x6739,0x6739,0x6318,0x5EF7,0x56B5,0x4A52,0x3DEF,0x35AD,
	0x2D6B,0x294A,0x2529,0x2529,0x294A,0x2D6B,0x35AD,0x4210,
	0x4E73,0x4E73,0x2108,0x2108,0x2108,0x2108,0x2108,0x2108,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,
	0x1CE7,0x1CE7,0x18C6,0x18C6,0x18C6,0x14A5,0x14A5,0x1084,
	0x0C63,0x0863,0x0864,0x0865,0x0866,0x0866,0x0467,0x0467,
	0x0887,0x252B,0x39D0,0x5A52,0x5673,0x6F39,0x7F7A,0x7F7A,
	0x7F7A,0x7F7A,0x7B59,0x735A,0x6B5F,0x6B5F,0x6B5F,0x6B5F,

	0x673F,0x673F,0x673F,0x673F,0x673F,0x673F,0x631D,0x5EDB,
	0x5EDB,0x5EDB,0x5EFC,0x5EFC,0x5EDB,0x5EDB,0x5EDB,0x5EFC,
	0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x62FC,0x62FC,
	0x62FC,0x62FC,0x62FC,0x62FC,0x62FC,0x62FC,0x62FC,0x62FC,
	0x62FC,0x62FC,0x62FC,0x5EFC,0x5EFC,0x5EFC,0x5EFC,0x4656,
	0x14EB,0x0CA9,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,0x0CCA,
	0x0887,0x0887,0x0887,0x0467,0x0866,0x0866,0x0466,0x0467,
	0x0467,0x0887,0x0887,0x0887,0x0467,0x0467,0x0466,0x0466,

	0x0466,0x0466,0x0466,0x0466,0x0865,0x0842,0x0842,0x0842,
	0x0842,0x0842,0x0842,0x0C63,0x318C,0x6B5A,0x6318,0x5294,
	0x4632,0x39D0,0x31AF,0x256F,0x256E,0x252B,0x294A,0x294A,
	0x2529,0x2529,0x2529,0x35AD,0x5AD6,0x5EF7,0x6318,0x5EF7,
	0x5EF7,0x5AD6,0x2108,0x2108,0x2108,0x2108,0x2108,0x1CE7,
	0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,0x1CE7,
	0x18C6,0x14A5,0x1084,0x0C63,0x0863,0x0864,0x0865,0x0866,
	0x0467,0x0467,0x0466,0x0466,0x0466,0x0466,0x0466,0x0466,

	0x254B,0x7F9C,0x7F9C,0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x7F7A,
	0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x739D,0x6B5F,0x6B5F,0x6B5F,
	0x6B5F,0x6B5F,0x6F5F,0x6F5F,0x6B5F,0x6B5F,0x6F5E,0x6F5E,
	0x6F5E,0x6F5E,0x6F5E,0x6F5E,0x6F5E,0x739D,0x739D,0x6F5E,
	0x6F5E,0x6F5E,0x6F7C,0x739D,0x739D,0x6F7C,0x6F7C,0x6F7C,
	0x6F7C,0x739C,0x739C,0x739C,0x6F7C,0x6F7C,0x6F7C,0x6F7C,
	0x6F7C,0x6F7B,0x6F7B,0x6B5B,0x62FC,0x62FC,0x62FC,0x5EFC,
	0x56BA,0x256E,0x0CA9,0x0CA9,0x0CA9,0x0CCA,0x0CCA,0x0CCA,

	0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,
	0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0887,0x0887,0x0887,0x0887,
	0x0887,0x0887,0x0887,0x0887,0x0887,0x0866,0x0863,0x0842,
	0x0842,0x0842,0x0842,0x0842,0x0C63,0x1CE7,0x2D6B,0x294A,
	0x256E,0x2171,0x35B7,0x35B7,0x35B7,0x4654,0x56B5,0x56B5,
	0x294A,0x2529,0x2529,0x35AD,0x6318,0x6318,0x5294,0x56B5,
	0x5EF7,0x5EF7,0x2529,0x2108,0x2108,0x2108,0x2108,0x1CE7,
	0x1CE7,0x1CE7,0x1CE7,0x18C6,0x14A5,0x1084,0x1084,0x0C63,

	0x0864,0x0865,0x0866,0x0866,0x0467,0x0467,0x0467,0x0887,
	0x0887,0x0887,0x0467,0x0467,0x0467,0x0467,0x0467,0x0467,
	0x10C9,0x4A53,0x779B,0x7F9C,0x7F9C,0x7F7A,0x7F7A,0x7F7A,
	0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x6F5F,0x6B5F,0x6B5F,
	0x6F5F,0x6F5F,0x737F,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x77BD,0x77BD,0x77BD,
	0x77BD,0x77BD,0x77BD,0x739C,0x6F7B,0x739C,0x6F7B,0x6F7B,
	0x739C,0x6F7B,0x6739,0x6B5A,0x6739,0x6B5A,0x6F7B,0x739C,

	0x739C,0x739C,0x739C,0x6F7B,0x6F7B,0x62FC,0x62FC,0x62FC,
	0x5EFC,0x5EDB,0x39F3,0x190B,0x0CA9,0x0CA9,0x0CA9,0x0CCA,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x0CA9,0x0CA8,
	0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0CA8,0x0864,
	0x0842,0x0842,0x0842,0x0842,0x0842,0x0C63,0x294A,0x294A,
	0x256F,0x4219,0x529F,0x56BF,0x56BF,0x5EDB,0x5AD7,0x5AD6,
	0x294A,0x2529,0x2529,0x318C,0x6318,0x6318,0x5EF7,0x56B5,

	0x4A52,0x3DEF,0x2108,0x2108,0x2108,0x2108,0x1CE7,0x18C6,
	0x14A5,0x1084,0x0C63,0x0864,0x0865,0x0865,0x0866,0x0467,
	0x0467,0x0467,0x0467,0x0466,0x0466,0x0466,0x0467,0x0467,
	0x0467,0x0467,0x0467,0x0467,0x0467,0x0467,0x0467,0x0887,
	0x0887,0x192D,0x4654,0x5AB8,0x737B,0x7FBD,0x7F9C,0x7F9C,
	0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x739D,0x6F5F,0x6F5F,
	0x6F5F,0x6F5F,0x6F5F,0x7BDF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,
	0x7BDE,0x6B5A,0x6739,0x6F7B,0x6B5A,0x6F7B,0x6F7B,0x6318,

	0x6318,0x6318,0x6B5A,0x6739,0x6F7B,0x6318,0x6318,0x5EF7,
	0x5EF7,0x6318,0x6318,0x6739,0x6318,0x6B5A,0x6318,0x739C,
	0x739C,0x739C,0x739C,0x739C,0x6F9C,0x6F7B,0x6B5B,0x62FC,
	0x62FC,0x5EFC,0x5EFC,0x62FC,0x6717,0x4611,0x254B,0x0CA9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x0886,0x0863,0x0842,0x0842,0x0842,0x0842,0x2529,0x294A,

	0x2171,0x4219,0x529F,0x2D7F,0x529F,0x5298,0x52B7,0x5AD6,
	0x294A,0x2529,0x2529,0x294A,0x3DEF,0x35AD,0x294A,0x2108,
	0x2108,0x1CE7,0x2108,0x2D6B,0x3DEF,0x4A52,0x4A52,0x4210,
	0x318D,0x18C9,0x0887,0x0467,0x0467,0x0467,0x0467,0x0467,
	0x0467,0x0467,0x0467,0x0467,0x0466,0x0466,0x0466,0x0466,
	0x0467,0x0467,0x0467,0x0467,0x0887,0x0CCA,0x256F,0x4656,
	0x4A77,0x6B5F,0x737F,0x6F5F,0x5EFC,0x5AB8,0x735A,0x7FBD,
	0x7F9C,0x7F9C,0x7F7A,0x7F7A,0x7F7A,0x7F7A,0x6F5F,0x6F5F,

	0x6F5F,0x6F5F,0x6F5F,0x737F,0x7FFF,0x7FFF,0x7FFF,0x7BDE,
	0x7BDE,0x7BDE,0x739C,0x6F7B,0x739C,0x739C,0x739C,0x77BD,
	0x739C,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x739C,
	0x739C,0x739C,0x739C,0x6B5A,0x6F7B,0x6B5A,0x6F7B,0x6B5A,
	0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,0x6F7C,0x6B5B,
	0x62FC,0x62FC,0x5EFC,0x5EFC,0x62FC,0x7317,0x6AD5,0x5A73,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,

	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x0CA8,0x0864,0x0842,0x0842,0x0842,0x2529,0x294A,
	0x256F,0x35B7,0x56BF,0x463F,0x56BF,0x56BA,0x4A74,0x4210,
	0x2529,0x2529,0x2529,0x2108,0x2108,0x1CE7,0x18C6,0x1CE7,
	0x318C,0x4A52,0x6318,0x6B5A,0x6F7B,0x6F7B,0x6F7B,0x6F7B,
	0x6F7B,0x6F7B,0x631A,0x52B7,0x3A12,0x256E,0x10C9,0x0887,
	0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,0x0887,
	0x0CCA,0x0CCA,0x0CCD,0x10ED,0x10ED,0x5298,0x737F,0x737F,

	0x737F,0x737F,0x737F,0x737F,0x737F,0x737F,0x673F,0x673A,
	0x7F7A,0x7FDD,0x7FBD,0x7F9C,0x7F7A,0x7F7A,0x739D,0x6F5F,
	0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x737F,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x6B5A,0x739C,
	0x6318,0x739C,0x6B5A,0x6739,0x6B5A,0x6318,0x6739,0x6739,
	0x6B5A,0x6318,0x6F7B,0x5EF7,0x6739,0x6B5A,0x6318,0x6318,
	0x6B5A,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,
	0x735A,0x62FC,0x62FC,0x5EFC,0x5EFC,0x5EFC,0x5296,0x2D6C,

	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x0CA8,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x1085,0x0842,0x0842,0x2108,0x294A,
	0x252B,0x31D2,0x4219,0x35B7,0x2171,0x192D,0x2529,0x2108,
	0x1CE7,0x18C6,0x14A5,0x1084,0x1085,0x2D6B,0x56B5,0x739C,
	0x77BD,0x739C,0x739C,0x6F7B,0x739C,0x6F7B,0x739C,0x739C,
	0x77BD,0x6F7B,0x5AB5,0x6717,0x739C,0x77BD,0x739C,0x5EF9,

	0x4A53,0x31AF,0x190B,0x0CCA,0x10ED,0x150C,0x150E,0x152F,
	0x152F,0x152F,0x152F,0x152F,0x192E,0x39F3,0x62FC,0x737F,
	0x737F,0x737F,0x737F,0x737F,0x737F,0x737F,0x737F,0x737F,
	0x737F,0x739D,0x7FBD,0x7FBD,0x7FDD,0x7F9C,0x7F9C,0x737F,
	0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x7BDF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x6B5A,0x739C,
	0x6F7B,0x739C,0x6B5A,0x6F7B,0x6F7B,0x739C,0x6F7B,0x6F7B,
	0x6F7B,0x6739,0x6B5A,0x6F7B,0x6B5A,0x77BD,0x6F7B,0x6318,

	0x6739,0x6B5A,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x6F7C,0x62FC,0x62FC,0x62FC,0x5EFC,0x5EFC,0x4656,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10A6,0x0C63,0x2108,0x294A,
	0x294A,0x252B,0x252B,0x190B,0x18C9,0x14C7,0x1084,0x0864,
	0x1085,0x10A6,0x254B,0x4A74,0x6F7B,0x7BDE,0x77BD,0x739C,

	0x739C,0x739C,0x739C,0x739C,0x739C,0x77BD,0x77BD,0x6717,
	0x3DCD,0x2D05,0x2D05,0x2D05,0x3947,0x45CA,0x5673,0x6717,
	0x739B,0x77BD,0x77BD,0x6B5B,0x52B7,0x3A35,0x2591,0x1D50,
	0x1D50,0x194F,0x192E,0x194F,0x1D50,0x1D50,0x1D50,0x2591,
	0x4656,0x5EFC,0x737F,0x737F,0x737F,0x737F,0x737F,0x737F,
	0x737F,0x737F,0x737F,0x7FBD,0x7F9C,0x7F9C,0x7FDD,0x7BBE,
	0x737F,0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,

	0x6B5A,0x6F7B,0x6F7B,0x6318,0x6318,0x6F7B,0x6F7B,0x6739,
	0x6B5A,0x6F7B,0x6318,0x6B5A,0x6F7B,0x6B5A,0x6F7B,0x6F7B,
	0x6B5A,0x6F7B,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x739C,0x6B5B,0x62FC,0x5EFC,0x5EDB,0x5EDB,
	0x14EA,0x10EA,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x0CA8,0x1CE8,0x1CE7,

	0x14A5,0x1084,0x0864,0x1085,0x10A6,0x0CA8,0x10C9,0x192C,
	0x3A12,0x673A,0x7BDE,0x7BDE,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x77BD,0x7BDE,0x739C,0x5673,0x2D28,0x2D05,
	0x24C4,0x39EF,0x4672,0x3E53,0x39EF,0x20E6,0x24C4,0x2D05,
	0x2D05,0x3569,0x5230,0x5AB5,0x6F7A,0x77BD,0x77BD,0x6F7B,
	0x5EF9,0x4656,0x31D2,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,
	0x1D50,0x1D50,0x2171,0x3A35,0x56BA,0x739D,0x737F,0x737F,
	0x737F,0x737F,0x737F,0x737F,0x739D,0x7FBD,0x7F9C,0x7F9C,

	0x737F,0x737F,0x6F5F,0x6F5F,0x6F5F,0x6F5F,0x737F,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x77BD,0x7BDE,0x7BDE,0x77BD,0x7BDE,0x77BD,0x77BD,
	0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,
	0x77BD,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x739C,0x739C,0x6B5B,0x62FC,0x5EFC,0x5EFC,
	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x10EA,0x10EA,0x10EA,
	0x10EA,0x10EA,0x10EA,0x10EA,0x10C9,0x10C9,0x10EA,0x10EA,

	0x10EA,0x10EA,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,
	0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x10C9,0x0CA8,
	0x0CA8,0x10C9,0x10EA,0x10C9,0x14EA,0x31AF,0x52B7,0x77BD,
	0x7BDE,0x77BD,0x739C,0x739C,0x739C,0x739C,0x739C,0x77BD,
	0x77BD,0x7BDE,0x6717,0x3DCD,0x20C5,0x20C5,0x192C,0x0A39,
	0x1A9C,0x1A9C,0x16FF,0x1A9C,0x3B1D,0x1A9C,0x0A39,0x05F9,
	0x14EB,0x20C5,0x2D05,0x3947,0x3947,0x3947,0x3DCD,0x5A73,
	0x6B39,0x77BD,0x739C,0x6F9C,0x5EF9,0x4E75,0x39F3,0x2591,

	0x1D50,0x1D50,0x1D50,0x1D50,0x194F,0x1D50,0x39F3,0x56BA,
	0x6F5E,0x737F,0x737F,0x737F,0x737F,0x737F,0x7BBE,0x7F9C,
	0x7F9C,0x737F,0x6B5F,0x631D,0x631D,0x6F5F,0x673F,0x7BDF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x7BDE,
	0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x77BD,
	0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x739C,
	0x739C,0x739C,0x739C,0x739C,0x6F7B,0x6F7B,0x6F7B,0x6F7B,
	0x6F7B,0x6B5B,0x6B5A,0x6B5A,0x6B5A,0x673A,0x56BA,0x56BA,

	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,
	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,
	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x10EA,0x10EA,0x10EA,
	0x10EA,0x10EA,0x10EA,0x10EA,0x10EA,0x14EA,0x14EA,0x14EA,
	0x14EA,0x14EA,0x256E,0x4A74,0x6F7B,0x7BDE,0x77BD,0x739C,
	0x739C,0x739C,0x77BD,0x739C,0x77BD,0x77BD,0x7BDE,0x77BD,
	0x5673,0x2D28,0x20C5,0x35D1,0x2E35,0x0ABE,0x16FF,0x16FF,
	0x0ABE,0x2E78,0x526B,0x420E,0x318C,0x2E35,0x1A9C,0x05F9,

	0x0997,0x0997,0x0DB4,0x190B,0x2D05,0x20A3,0x1882,0x20A3,
	0x24C4,0x3947,0x5AB5,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x631A,0x4A77,0x2591,0x1D50,0x1D50,0x194F,0x192E,0x192E,
	0x192E,0x31D2,0x4A77,0x6B5F,0x737F,0x737F,0x737F,0x737F,
	0x7FBD,0x737F,0x6F5F,0x6B5F,0x6B5F,0x6B5F,0x673F,0x673F,
	0x7BBE,0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6F7B,0x6F7B,
	0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6B5A,0x6739,0x6739,0x6739,

	0x6739,0x6318,0x5AD7,0x52B7,0x52B7,0x4E75,0x4E75,0x4A74,
	0x4654,0x3A12,0x3A12,0x3A12,0x3A12,0x35D1,0x31AF,0x298F,
	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,
	0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EB,
	0x14EB,0x190B,0x190B,0x150C,0x192C,0x192D,0x192D,0x192D,
	0x14EB,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x14EA,0x192C,
	0x3A12,0x631A,0x7BDE,0x7BDE,0x77BD,0x739C,0x739C,0x77BD,
	0x739C,0x77BD,0x77BD,0x7BDE,0x7BDE,0x6739,0x41EE,0x2D05,

	0x2D05,0x20C5,0x24E6,0x2D05,0x192C,0x0ABE,0x0ABE,0x0ABE,
	0x0ABE,0x460C,0x4E93,0x67BE,0x6FFF,0x67BE,0x67BE,0x4AFA,
	0x3698,0x254B,0x254B,0x21E7,0x162A,0x162A,0x162A,0x162A,
	0x4A8F,0x6B39,0x77BD,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x6318,0x3DEF,0x256E,0x1D50,0x1D50,0x1D4F,0x194F,0x194F,
	0x192E,0x192E,0x192E,0x192E,0x2591,0x4276,0x6B5B,0x737F,
	0x737F,0x737F,0x62FC,0x62FC,0x56BA,0x62FC,0x631A,0x5298,
	0x6F39,0x735A,0x6F39,0x6F39,0x6F39,0x6717,0x5AB5,0x6F39,

	0x6F39,0x6F39,0x6F7A,0x6F7B,0x6F7B,0x6F7B,0x6739,0x5AD6,
	0x5294,0x4E73,0x5294,0x5294,0x5AD6,0x6318,0x5EF7,0x4631,
	0x31AF,0x256E,0x1D4E,0x192E,0x192E,0x192E,0x192E,0x192E,
	0x192D,0x192D,0x192D,0x192D,0x192D,0x192D,0x192D,0x192D,
	0x14EA,0x14EB,0x14EB,0x190B,0x150C,0x192C,0x192D,0x192D,
	0x192D,0x1D4E,0x1D4E,0x1D4F,0x216F,0x2170,0x2170,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2591,0x2591,0x2591,
	0x2170,0x192C,0x14EA,0x14EA,0x14EB,0x31AF,0x52B7,0x739D,

	0x7BDE,0x77BD,0x739C,0x739C,0x739C,0x77BD,0x739C,0x77BD,
	0x77BD,0x7BDE,0x77BD,0x5694,0x3569,0x20A3,0x20C5,0x1CAB,
	0x1890,0x1897,0x1890,0x1085,0x1CE7,0x0DB4,0x0DB4,0x05F9,
	0x05F9,0x152F,0x3A35,0x4276,0x4E93,0x3A12,0x31E9,0x3F15,
	0x3F15,0x16AD,0x16AD,0x49A1,0x3947,0x4A05,0x4A8F,0x6B5B,
	0x77BD,0x77BD,0x77BD,0x77BD,0x77BD,0x739C,0x6318,0x4210,
	0x2D6B,0x2D6B,0x256E,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,
	0x1D50,0x1D4F,0x194F,0x194F,0x194F,0x194F,0x192E,0x2591,

	0x4656,0x5EFC,0x739D,0x6F39,0x6AD5,0x5A73,0x5A52,0x5A52,
	0x5A73,0x6AD5,0x7317,0x7F9C,0x7F9C,0x6F39,0x6AD5,0x7B59,
	0x7F7A,0x7B59,0x7B59,0x7317,0x5EF7,0x5294,0x4E73,0x4E73,
	0x5294,0x5294,0x4E73,0x5294,0x5AD6,0x4A52,0x318D,0x256E,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4E,0x1D4E,0x1D4E,
	0x1D4E,0x192E,0x192E,0x192D,0x192D,0x192D,0x192D,0x192D,
	0x2170,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,

	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2591,
	0x2591,0x2170,0x256E,0x4A74,0x6B5B,0x7BDE,0x77BD,0x739C,
	0x739C,0x739C,0x739C,0x77BD,0x77BD,0x77BD,0x7BDE,0x7BDE,
	0x6B5A,0x41EE,0x24C4,0x20A3,0x2D05,0x2191,0x0DB4,0x0997,
	0x0997,0x0CCD,0x1CAB,0x20C5,0x20A3,0x24C4,0x3DCD,0x4610,
	0x20C5,0x1882,0x20A3,0x2D05,0x3947,0x2547,0x3227,0x45E3,
	0x31E9,0x3227,0x4A05,0x5A02,0x6ACE,0x779B,0x7BDE,0x77BD,
	0x77BD,0x77BD,0x77BD,0x77BD,0x6739,0x4631,0x318C,0x2D6B,

	0x318C,0x2D6B,0x256E,0x2171,0x2171,0x2171,0x2171,0x2171,
	0x2170,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x1D4F,
	0x1D4F,0x194F,0x2170,0x3A35,0x5296,0x6AD5,0x735A,0x7B59,
	0x7317,0x7B59,0x7B59,0x7F7A,0x7F7A,0x7F9C,0x7F9C,0x7F7A,
	0x6AD5,0x5A73,0x5230,0x5230,0x4E73,0x4E73,0x4E73,0x4E73,
	0x4E73,0x4E73,0x4631,0x39CE,0x2D6C,0x192C,0x192E,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4E,0x1D4E,
	0x1D4E,0x1D4E,0x192E,0x192D,0x192D,0x192D,0x192D,0x192D,

	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2591,
	0x4276,0x631A,0x77BD,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x739C,0x77BD,0x7BDE,0x7BDE,0x5AB5,0x3569,
	0x18E4,0x1545,0x18E4,0x3544,0x7A81,0x3947,0x0A39,0x0DB4,
	0x14C7,0x18A3,0x1882,0x20C5,0x39AC,0x5EF6,0x5673,0x4E52,
	0x5AB5,0x24E6,0x20A3,0x1882,0x1882,0x18A3,0x0DC7,0x45E3,

	0x5A02,0x5A02,0x6ACE,0x779B,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x77BD,0x77BD,0x6B5A,0x4631,0x318C,0x2D6B,0x318C,0x3DEF,
	0x4E73,0x2D6B,0x298F,0x2591,0x2591,0x2591,0x2591,0x2591,
	0x2191,0x2191,0x2191,0x2171,0x2171,0x2171,0x2171,0x2170,
	0x2170,0x1D50,0x1D50,0x1D50,0x192E,0x190B,0x4A53,0x7F9C,
	0x735A,0x6AD5,0x6AD5,0x5E94,0x5A73,0x5694,0x5EF9,0x6717,
	0x5230,0x5298,0x4654,0x4A53,0x4E73,0x4E73,0x4E73,0x56B5,
	0x4A52,0x39CE,0x254B,0x190B,0x0CCA,0x14EB,0x150C,0x1D4F,

	0x216F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4E,
	0x1D4E,0x1D4E,0x192E,0x192D,0x192D,0x192D,0x192D,0x192D,
	0x2171,0x2171,0x2171,0x2171,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2591,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2591,0x3A35,0x5EF9,0x739C,
	0x77BD,0x77BD,0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x7BDE,0x7BDE,0x6F7A,0x4610,0x24E6,0x20C5,0x1545,
	0x1545,0x0DC7,0x0DC7,0x162A,0x21E7,0x49A1,0x59C1,0x20A3,

	0x1882,0x2D28,0x41EE,0x5EF6,0x4610,0x41EE,0x5673,0x3DCD,
	0x24E6,0x20A3,0x1882,0x1882,0x20A3,0x20A3,0x24C4,0x162A,
	0x3F15,0x73BD,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,
	0x6F7B,0x4A52,0x318C,0x318C,0x2D6B,0x2129,0x1CE7,0x3DEF,
	0x4A52,0x2D6B,0x256E,0x2591,0x2591,0x2591,0x2591,0x2591,
	0x2591,0x2591,0x2591,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2171,0x2171,0x2170,0x192E,0x150C,0x256E,
	0x4611,0x35AE,0x3A12,0x5EDB,0x631D,0x6B5F,0x673F,0x56BA,

	0x35D1,0x5EFC,0x56BA,0x4654,0x4656,0x56BA,0x5296,0x3DEF,
	0x254B,0x190B,0x14EB,0x150C,0x192E,0x1D4F,0x1D4F,0x216F,
	0x216F,0x216F,0x216F,0x216F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x1D4E,0x1D4E,0x1D4E,0x192E,0x192E,0x192D,0x192D,0x192D,
	0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x2170,0x2171,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x31D2,0x4A77,0x6B5B,0x77BD,0x77BD,0x739C,
	0x739C,0x739C,0x739C,0x739C,0x739C,0x739C,0x77BD,0x7BDE,

	0x7FDD,0x5ED6,0x3569,0x1882,0x1882,0x20A3,0x1545,0x0DC7,
	0x162A,0x0DC7,0x1545,0x1545,0x18E4,0x1882,0x1882,0x2D28,
	0x398B,0x4610,0x41EE,0x4A31,0x4610,0x2D28,0x20A3,0x1882,
	0x1462,0x1462,0x1882,0x20A3,0x24C4,0x2D28,0x5673,0x77BD,
	0x7FFF,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x7BDE,0x6F7B,0x4E73,
	0x318C,0x318C,0x2D6B,0x254A,0x18E7,0x2529,0x39CE,0x39CE,
	0x318C,0x254B,0x190B,0x150C,0x192D,0x216F,0x2591,0x2591,
	0x2591,0x2591,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,

	0x2191,0x2191,0x2191,0x2191,0x2191,0x2171,0x2171,0x2170,
	0x1D4F,0x14EB,0x14EA,0x14EB,0x256F,0x4276,0x6B5B,0x737F,
	0x737F,0x631D,0x62FC,0x631D,0x4A77,0x31AF,0x254B,0x192C,
	0x1D4E,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x216F,
	0x2170,0x2170,0x2170,0x216F,0x216F,0x216F,0x216F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4E,0x1D4E,0x1D4E,0x1D4E,0x192E,0x192D,
	0x192E,0x192E,0x192E,0x192E,0x192E,0x192E,0x194F,0x1D50,
	0x1D50,0x1D50,0x1D50,0x1D50,0x2171,0x2171,0x2171,0x2591,

	0x3A35,0x5EF9,0x739D,0x77BD,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x739C,0x739C,0x77BD,0x7BDE,0x6F7B,0x4610,
	0x24E6,0x20A3,0x1882,0x49A1,0x49A1,0x1545,0x0DC7,0x0DC7,
	0x1545,0x1545,0x1104,0x1462,0x20A3,0x3DCD,0x56B4,0x4E72,
	0x5673,0x62F7,0x41EE,0x3569,0x20A3,0x1462,0x1462,0x1462,
	0x1882,0x20A3,0x20A3,0x2D28,0x5673,0x7BDE,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7BDE,0x7BDE,0x739C,0x4E73,0x318C,0x318C,
	0x318C,0x294A,0x1D08,0x2529,0x39CE,0x39CE,0x318C,0x254B,

	0x190B,0x14EB,0x14EB,0x14EB,0x150C,0x1D4F,0x2191,0x2591,
	0x2191,0x2191,0x2191,0x2171,0x2171,0x2171,0x2171,0x2171,
	0x2171,0x2171,0x2171,0x2171,0x2191,0x2171,0x2171,0x2171,
	0x2170,0x2170,0x1D4F,0x1D50,0x2170,0x2171,0x2191,0x31D2,
	0x4A77,0x62FC,0x737F,0x39D0,0x256E,0x216F,0x2170,0x2170,
	0x2170,0x2170,0x2170,0x216F,0x216F,0x216F,0x216F,0x216F,
	0x216F,0x2170,0x2170,0x2170,0x2170,0x216F,0x216F,0x216F,
	0x216F,0x216F,0x1D4F,0x1D4F,0x1D4E,0x1D4E,0x1D4E,0x1D4E,

	0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x150E,0x152F,0x192E,
	0x194F,0x194F,0x194F,0x194F,0x1D50,0x31D2,0x52B7,0x6F7C,
	0x77BD,0x739C,0x739C,0x6F7B,0x739C,0x739C,0x739C,0x739C,
	0x739C,0x739C,0x7BDE,0x77BD,0x5ED6,0x398B,0x1882,0x1882,
	0x3544,0x4A05,0x45CA,0x4A05,0x59C1,0x45E3,0x4A05,0x1545,
	0x18A3,0x1462,0x20C5,0x41EE,0x3DCD,0x39AC,0x5694,0x5AB5,
	0x4E52,0x2D28,0x1882,0x20C5,0x1462,0x1462,0x1882,0x1882,
	0x20A3,0x2D28,0x5AB5,0x7BDE,0x7FFF,0x7FFF,0x7FFF,0x7FFF,

	0x7FFF,0x7FFF,0x739C,0x5294,0x35AD,0x318C,0x318C,0x294A,
	0x1D08,0x2129,0x35AD,0x3DEF,0x35AD,0x254B,0x190B,0x14EA,
	0x14EA,0x14EB,0x14EB,0x192E,0x2191,0x2591,0x2591,0x2591,
	0x2191,0x2191,0x2191,0x2171,0x2171,0x2171,0x2170,0x2170,
	0x2170,0x2170,0x2170,0x2171,0x2171,0x2171,0x2171,0x2171,
	0x2170,0x2170,0x1D50,0x1D50,0x1D50,0x2170,0x2171,0x2171,
	0x2171,0x2191,0x2591,0x2591,0x2170,0x2170,0x2170,0x2170,
	0x2170,0x2170,0x2170,0x2170,0x216F,0x216F,0x216F,0x1D4F,

	0x1D4F,0x216F,0x216F,0x2170,0x2170,0x216F,0x216F,0x216F,
	0x216F,0x216F,0x216F,0x1D4F,0x1D4F,0x1D4F,0x1D4E,0x1D4E,
	0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x150E,0x152F,
	0x152F,0x152F,0x2170,0x4654,0x673A,0x739C,0x739C,0x739C,
	0x6F7B,0x6F7B,0x739C,0x6F7B,0x739C,0x739C,0x739C,0x77BD,
	0x7BDE,0x737B,0x4E52,0x24E6,0x148A,0x148A,0x1067,0x14EA,
	0x0A39,0x0DB4,0x0ABE,0x0DB4,0x49A1,0x49A1,0x1882,0x1882,
	0x24E6,0x4610,0x5AB5,0x56B5,0x5694,0x398B,0x3DCD,0x20C5,

	0x1882,0x24E6,0x5673,0x4610,0x20E6,0x1462,0x1882,0x2D28,
	0x5AB5,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,
	0x77BD,0x56B5,0x35AD,0x318C,0x318C,0x254B,0x1D08,0x2108,
	0x35AD,0x3DEF,0x35AD,0x2D6B,0x252B,0x14EB,0x14EB,0x14EB,
	0x14EB,0x192D,0x2170,0x2191,0x2191,0x2591,0x2591,0x2591,
	0x2591,0x2591,0x2191,0x2191,0x2191,0x2171,0x2171,0x2171,
	0x2171,0x2171,0x2170,0x2170,0x2170,0x2170,0x2170,0x2170,
	0x2170,0x2170,0x1D50,0x1D50,0x1D50,0x1D50,0x2170,0x2170,

	0x2170,0x2170,0x2170,0x2170,0x2170,0x2170,0x2170,0x2170,
	0x2170,0x2170,0x2170,0x2170,0x216F,0x216F,0x216F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x216F,0x216F,0x216F,0x216F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x150E,0x150E,
	0x150E,0x216F,0x5EF7,0x6F7B,0x739C,0x6F7B,0x6F7B,0x6F7B,
	0x6F7B,0x739C,0x739C,0x739C,0x739C,0x77BD,0x77BD,0x5EF7,
	0x398B,0x1882,0x1882,0x1882,0x18B7,0x18B7,0x18B7,0x18B7,

	0x18B7,0x0CCD,0x10EB,0x14C7,0x1882,0x20A3,0x24E6,0x3DCD,
	0x5AB5,0x5673,0x5673,0x56B4,0x35AC,0x1462,0x1462,0x2547,
	0x39AC,0x41EE,0x24E6,0x1882,0x1882,0x2D28,0x5ED6,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x56B5,
	0x35AD,0x318C,0x318C,0x2D6B,0x2109,0x1D08,0x318C,0x3DEF,
	0x39CE,0x318C,0x254B,0x14EB,0x14EB,0x14EB,0x14EB,0x150C,
	0x1D4F,0x2171,0x2171,0x2171,0x2191,0x2191,0x2191,0x2591,
	0x2591,0x2591,0x2591,0x2591,0x2191,0x2191,0x2191,0x2191,

	0x2171,0x2171,0x2171,0x2171,0x2170,0x2170,0x2170,0x2170,
	0x2170,0x2170,0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x2170,
	0x2170,0x2170,0x2170,0x2170,0x2170,0x1D50,0x1D50,0x1D50,
	0x1D4F,0x1D4F,0x1D4F,0x216F,0x216F,0x216F,0x1D4F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x10ED,0x150E,0x10ED,
	0x10ED,0x1D4E,0x4E73,0x4E73,0x56B5,0x6739,0x6F7B,0x739C,

	0x6F7B,0x6F7B,0x77BD,0x77BD,0x77BD,0x4A51,0x20E6,0x1462,
	0x1882,0x1882,0x1882,0x1462,0x1067,0x1085,0x1085,0x18B7,
	0x1897,0x1067,0x1462,0x20C5,0x20C5,0x3DCE,0x4E52,0x5673,
	0x5673,0x3569,0x3569,0x1882,0x1882,0x1882,0x3DEE,0x420F,
	0x1882,0x1462,0x1462,0x3569,0x62F7,0x7FFF,0x7FFF,0x7FFF,
	0x7FFF,0x7FFF,0x7FFF,0x7FFF,0x7BDE,0x5AD6,0x39CE,0x318C,
	0x318C,0x2D6C,0x2129,0x1CE7,0x2D8C,0x4210,0x39CE,0x318C,
	0x254B,0x190B,0x14EB,0x14EB,0x14EB,0x14EB,0x192E,0x2171,

	0x2171,0x2171,0x2171,0x2171,0x2171,0x2171,0x2171,0x2191,
	0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,0x2191,
	0x2191,0x2191,0x2171,0x2171,0x2171,0x2170,0x2170,0x2170,
	0x1D50,0x1D50,0x1D50,0x1D50,0x1D50,0x1D4F,0x1D50,0x1D50,
	0x1D50,0x2170,0x2170,0x2170,0x1D50,0x1D50,0x1D4F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
	0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,0x1D4F,
};

int _uiAboutWin(int);
uiWindow aboutWindow = { 0x707, 32, 32, 227, 78, "E Clunibus Tractum", _uiAboutWin };
int _uiAboutWin(int me)
{
	auto win = &windows[me];
	aboutWindow.left = win->left;
	aboutWindow.top = win->top;
	DrawString(win->left + 150, win->top + 16, 0x07FF, "Asspull IIIx");
	DrawString(win->left + 150, win->top + 28, WINDOW_TEXT, "System design\nand emulator\nby Kawa");
	DrawImage(win->left + 1, win->top + 13, (unsigned short*)aboutPic, 144, 64);
	if (uiHandleButton(win->left + 190, win->top + 61, 34, "Cool"))
	{
		CloseWindow(0x0707);
		return -1;
	}
	return 0;
}

extern "C" unsigned int m68k_read_memory_8(unsigned int address);
int _uiMemoryViewer(int);
uiWindow memoryViewerWindow = { 0x1337, 128, 128, 260, 334, "Memory Viewer", _uiMemoryViewer };
unsigned int memViewerOffset = CART_ADDR;
int _uiMemoryViewer(int me)
{
	auto win = &windows[me];
	const char hex[] = "0123456789ABCDEF";
	char offsetStr[16] = { 0 };
	unsigned int offset = memViewerOffset;
	for (int row = 0; row < 32; row++)
	{
		sprintf_s(offsetStr, 16, "%08X", offset);
		DrawString(win->left + 2, win->top + 14 + (row * 10), WINDOW_TEXT, offsetStr);
		for (int col = 0; col < 8; col++)
		{
			auto here = m68k_read_memory_8(offset++);
			DrawCharacter(win->left + 56 + (col * 16), win->top + 14 + (row * 10), WINDOW_TEXT, *(hex + (here & 0x0F)));
			DrawCharacter(win->left + 62 + (col * 16), win->top + 14 + (row * 10), WINDOW_TEXT, *(hex + ((here & 0xF0) >> 4)));

			DrawCharacter(win->left + 186 + (col * 7), win->top + 14 + (row * 10), WINDOW_TEXT, here);
		}
	}
	if (uiHandleButton(win->left + 248, win->top + 1, 11, "X")) //TODO: make a dedicated Close button
	{
		CloseWindow(0x1337);
		return -1;
	}
	else if (uiHandleButton(win->left +	248, win->top + 13, 11, "U") && memViewerOffset > 0)
		memViewerOffset -= 0x100;
	else if(uiHandleButton(win->left +	248, win->top + 319, 11, "D") && memViewerOffset < 0xFFFFFFFF) //check this
		memViewerOffset += 0x100;
	return 0;
}

